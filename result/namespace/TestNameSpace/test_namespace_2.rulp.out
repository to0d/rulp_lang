(new namespace ns1)
;=>ns1

(new namespace ns2)
;=>ns2

(defvar ns1::var1 1)
;=>&var1

(defun ns1::f1 () (return 1))
;=>ns1::f1

(defvar ns2::var1 2)
;=>&var1

(defun ns2::f1 () (return 2))
;=>ns2::f1

(use namespace ns1)
;=>nil

(value-of var1)
;=>1

(f1)
;=>1

(use namespace ns2)
;=>nil

(value-of var1)
;=>2

(f1)
;=>2

(use namespace ns1)
;=>nil

(value-of var1)
;=>1

(f1)
;=>1

(print-global-info)
;=>nil
;out:
Global Info:

Total runtime info:
==========================================================================================================================
                          Name:     info
--------------------------------------------------------------------------------------------------------------------------
     Interpreter call id/level:       86        1
             CPS support/count:    false        0
               Frame max level:        3
                  Frame max id:        6
           Frame free id count:        1
==========================================================================================================================

Expression compute count:
==========================================================================================================================
     RType:    Count
--------------------------------------------------------------------------------------------------------------------------
    factor:       92
      func:        3
==========================================================================================================================

Callable stats info: callId=86, row=15, column=44(2), value-max=2, value-unit=2^x
==========================================================================================================================
   Frame    RType  Count  Ref Object                         12222222222222222222222222222222222222434431 max=6, unit=2^x
--------------------------------------------------------------------------------------------------------------------------
    root   factor     55    0 defun                              2222222111 2222222222 2212122121 11     
    root   factor      6    0 value-of                                                             11211 
    root   factor      6    0 alias                          1221                                        
    root   factor      4    0 defclass                                                1  1 1  1          
  system template      3    1 use                                                                  1 11  
    root   factor      3    0 return                                                                1 11 
    root   factor      3    0 frame-of                                                             1 11  
    root   factor      3    0 defvar                            1                                11      
    root   factor      3    0 deftemplate                                 12                             
    root   factor      3    0 defmacro                                  11            1                  
    root   factor      3    0 add_search_frame                                                     1 11  
    root   factor      2    0 new                                                               11       
    main   member      2    1 namespace@ns1::f1                                                     1  1 
    root   factor      1    0 print-global-info                                                         1
    main   member      1    1 namespace@ns2::f1                                                       1  
==========================================================================================================================

Object create count:
==========================================================================================================================
       RType:       Create       Delete        Exist
--------------------------------------------------------------------------------------------------------------------------
        atom:          911            0          911
      string:           29            0           29
        list:            6            0            6
        expr:          487            6          481
       array:            1            0            1
         var:           24            6           18
        func:          104            0          104
    template:            1            0            1
       macro:            3            0            3
    instance:            2            0            2
       class:            4            0            4
      member:          127            0          127
       frame:            8            6            2
 interpreter:            1            0
  frameEntry:          227            0
      lambda:            0            0
==========================================================================================================================

Global frame list: total=2

id=2, name=main, lvl=2, ref=3/5, entry=6, pid=1(system), subject=main, search=[frame@SF-ns1-0, frame@SF-ns2-1, frame@main]
==========================================================================================================================
Name(alias)          : EntryId  FrameId  Ref  Type       Value               
--------------------------------------------------------------------------------------------------------------------------
root                 : 1        2        0    frame      frame@root          
system               : 2        2        0    frame      frame@system        
main                 : 3        2        3    frame      frame@main          
ns1                  : 4        2        3    instance   namespace@ns1       
ns2                  : 5        2        2    instance   namespace@ns2       
?rv                  : 11       2        1    var        1 : type=int        
==========================================================================================================================


id=4, name=SF-ns1-0, lvl=3, ref=1/1, entry=0, pid=2(main), subject=ns1

id=5, name=SF-ns2-1, lvl=3, ref=1/1, entry=0, pid=2(main), subject=ns2

Global frame tree:

->FRAME(root): id=0, lvl=0, subject=root
    ->FRAME(system): id=1, lvl=1, subject=system
        ->FRAME(main): id=2, lvl=2, subject=main, search=[frame@SF-ns1-0, frame@SF-ns2-1, frame@main]
            ->FRAME(SF-ns1-0): id=4, lvl=3, subject=ns1
            ->FRAME(SF-ns2-1): id=5, lvl=3, subject=ns2

Global Subject list:

name=ns1, string=namespace@ns1, lvl=1, ref=3/5, parent=namespace, final=false, mbrs=3, frame=4(SF-ns1-0)
==========================================================================================================================
Name                 : Access  Final Static Inherit Prop Ref  Type       Value
--------------------------------------------------------------------------------------------------------------------------
f1                   : DEFAULT                      0    1    func       (f1) : frame=frame@main
this                 : DEFAULT                      0    3    instance   namespace@ns1
var1                 : DEFAULT                      0    1    var        1 : type=int
==========================================================================================================================

name=ns2, string=namespace@ns2, lvl=1, ref=2/4, parent=namespace, final=false, mbrs=3, frame=5(SF-ns2-1)
==========================================================================================================================
Name                 : Access  Final Static Inherit Prop Ref  Type       Value
--------------------------------------------------------------------------------------------------------------------------
f1                   : DEFAULT                      0    1    func       (f1) : frame=frame@main
this                 : DEFAULT                      0    2    instance   namespace@ns2
var1                 : DEFAULT                      0    1    var        2 : type=int
==========================================================================================================================


;eof

