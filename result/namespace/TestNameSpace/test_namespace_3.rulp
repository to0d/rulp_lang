(defvar var1 1)
;=>&var1
(value-of var1)
;=>1
(new namespace ns1)
;=>ns1
(use namespace main)
;=>main
(defvar var2 3) ; define in main frame
;=>&var2
(value-of var2)
;=>3
(defun fun() 
    (print "var2: value=" (value-of var2) ", subject=" (subject-of var2) "\n")
    (use namespace ns1)
    (print "var1: value=" (value-of var1) ", subject=" (subject-of var1) "\n")
    (defvar var1 2)
    (print "var2: value=" (value-of var2) ", subject=" (subject-of var2) "\n")
    (print "var1: value=" (value-of var1) ", subject=" (subject-of var1) "\n")
)
;=>fun
(fun)
;=>nil
;out:
var2: value=3, subject=main
var1: value=1, subject=main
var2: value=3, subject=main
var1: value=2, subject=DO
;eof
(value-of var1)
;=>1
(fun)
;=>nil
;out:
var2: value=3, subject=main
var1: value=1, subject=main
var2: value=3, subject=main
var1: value=2, subject=DO
;eof