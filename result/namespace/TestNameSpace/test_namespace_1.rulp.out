(new namespace ns1)
;=>ns1

(defvar var1 1)
;=>&var1

(defun f1 () (return 1))
;=>f1

(search-frame-of)
;=>'()

;;;;; define variable in name space
(defvar ns1::var1 2)
;=>&var1

(defvar ns1::var2 3)
;=>&var2

(value-of var1)
;=>1

(value-of (value-of main::var1))
;=>1

(value-of (value-of ns1::var1))
;=>2

(value-of (value-of ns1::var2))
;=>3

(ls)
;=>'(main::f1 main::main main::ns1 main::root main::system main::var1)

(ls ns1)
;=>'(ns1::this ns1::var1 ns1::var2)

(has-member ns1 var1)
;=>true

;;;;; define function in name space
(defun ns1::f1 () (return 2))
;=>ns1::f1

(defun ns1::f2 () (return 3))
;=>ns1::f2

(f1)
;=>1

(main::f1)
;=>1

(ns1::f1)
;=>2

(ns1::f2)
;=>3

(ls)
;=>'(main::?rv main::f1 main::main main::ns1 main::root main::system main::var1)

(ls ns1)
;=>'(ns1::f1 ns1::f2 ns1::this ns1::var1 ns1::var2)

;;;;; Can't define same name item
(defvar ns1::var1 1)
;err:
duplicate member variable: namespace@ns1::var1
at main: (defvar ns1::var1 1)
;eof

(defun ns1::f1 () (return 2))
;err:
duplicate funcion: (f1)
at main: (defun ns1::f1 () (return 2))
;eof

(ls)
;=>'(main::?rv main::f1 main::main main::ns1 main::root main::system main::var1)

(ls ns1)
;=>'(ns1::f1 ns1::f2 ns1::this ns1::var1 ns1::var2)

;;;;; Can't find item if the using the name space is not specified
(value-of var2)
;err:
object not found: var2
at main: (value-of var2)
;eof

(f2)
;err:
factor not found: (f2)
at main: (f2)
;eof

(ls)
;=>'(main::?rv main::f1 main::main main::ns1 main::root main::system main::var1)

(ls ns1)
;=>'(ns1::f1 ns1::f2 ns1::this ns1::var1 ns1::var2)

;;;;  Search item in a name space
(use namespace ns1)
;=>nil

(search-frame-of)
;=>'(SF-ns1-0 main)

(value-of (value-of main::var1))
;=>1

(value-of (value-of ns1::var1))
;=>2

(value-of (value-of ns1::var2))
;=>3

(main::f1)
;=>1

(ns1::f1)
;=>2

(ns1::f2)
;=>3

;;;;; Item will be only define in the current frame if the using the name space is not specified
(defvar var3 4)
;=>&var3

(defun f3 () (return 4))
;=>f3

;;;;; the latest name space higher priority
(value-of var1)
;=>2

(f1)
;=>2

;;;;; change back, everything should work fine
(value-of var2)
;=>3

(f2)
;=>3

(use namespace main)
;=>nil

(search-frame-of)
;=>'(main SF-ns1-0)

(value-of var1)
;=>1

(value-of (value-of main::var1))
;=>1

(value-of (value-of ns1::var1))
;=>2

(value-of (value-of ns1::var2))
;=>3

(value-of var3)
;=>4

(f1)
;=>1

(main::f1)
;=>1

(ns1::f1)
;=>2

(ns1::f2)
;=>3

(f3)
;=>4

(print-global-info)
;=>nil
;out:
Global Info:

Total runtime info:
==========================================================================================================================
                          Name:     info
--------------------------------------------------------------------------------------------------------------------------
     Interpreter call id/level:      126        1
             CPS support/count:    false        0
               Frame max level:        3
                  Frame max id:        5
           Frame free id count:        1
==========================================================================================================================

Expression compute count:
==========================================================================================================================
     RType:    Count
--------------------------------------------------------------------------------------------------------------------------
    factor:      136
      func:       14
==========================================================================================================================

Callable stats info: callId=126, row=20, column=64(2), value-max=4, value-unit=2^x
==========================================================================================================================
   Frame    RType  Count  Ref Object                         1222222222222222222222222222222222222223322332221243332333333331 max=5, unit=2^x
--------------------------------------------------------------------------------------------------------------------------
    root   factor     58    0 defun                              2222222111 2222222222 22121221211     2   1       1         
    root   factor     25    0 value-of                                                             132       1 132  11 331   
    root   factor     14    0 return                                                                    22       12 11   122 
    root   factor      8    0 ls                                                                     11   2 2 2              
    root   factor      6    0 defvar                            1                                111       1       1         
    root   factor      6    0 alias                          1221                                                            
    main     func      5    1 (f1)                                                                      2        1       11  
    main   member      4    1 namespace@ns1::f2                                                          1        1  1     1 
    main   member      4    1 namespace@ns1::f1                                                          1        1 1     1  
    root   factor      4    0 defclass                                                1  1 1  1                              
    root   factor      3    0 search-frame-of                                                     1            1      1      
    root   factor      3    0 deftemplate                                 12                                                 
    root   factor      3    0 defmacro                                  11            1                                      
  system template      2    1 use                                                                              1      1      
    root   factor      2    0 add_search_frame                                                                 1      1      
    root   factor      1    0 print-global-info                                                                             1
    root   factor      1    0 new                                                               1                            
    root   factor      1    0 has-member                                                              1                      
    root   factor      1    0 frame-of                                                                         1             
    main     func      1    1 (f3)                                                                                         1 
==========================================================================================================================

Object create count:
==========================================================================================================================
       RType:       Create       Delete        Exist
--------------------------------------------------------------------------------------------------------------------------
        atom:          983            0          983
      string:           29            0           29
        list:           16           10            6
        expr:          536           16          520
       array:            1            0            1
         var:           24            4           20
        func:          107            0          107
    template:            1            0            1
       macro:            3            0            3
    instance:            1            0            1
       class:            4            0            4
      member:          146            9          137
       frame:           17           16            1
 interpreter:            1            0
  frameEntry:          228            0
      lambda:            0            0
==========================================================================================================================

Global frame list: total=1

id=2, name=main, lvl=2, ref=2/6, entry=9, pid=1(system), subject=main, search=[frame@main, frame@SF-ns1-0]
==========================================================================================================================
Name(alias)          : EntryId  FrameId  Ref  Type       Value               
--------------------------------------------------------------------------------------------------------------------------
root                 : 1        2        0    frame      frame@root          
system               : 2        2        0    frame      frame@system        
main                 : 3        2        2    frame      frame@main          
ns1                  : 4        2        2    instance   namespace@ns1       
var1                 : 5        2        1    var        1 : type=int        
f1                   : 6        2        1    func       (f1) : frame=frame@main
?rv                  : 7        2        1    var        4 : type=int        
var3                 : 11       2        1    var        4 : type=int        
f3                   : 12       2        1    func       (f3) : frame=frame@main
==========================================================================================================================


id=4, name=SF-ns1-0, lvl=3, ref=1/2, entry=0, pid=2(main), subject=ns1

Global frame tree:

->FRAME(root): id=0, lvl=0, subject=root
    ->FRAME(system): id=1, lvl=1, subject=system
        ->FRAME(main): id=2, lvl=2, subject=main, search=[frame@main, frame@SF-ns1-0]
            ->FRAME(SF-ns1-0): id=4, lvl=3, subject=ns1

Global Subject list:

name=ns1, string=namespace@ns1, lvl=1, ref=2/4, parent=namespace, final=false, mbrs=5, frame=4(SF-ns1-0)
==========================================================================================================================
Name                 : Access  Final Static Inherit Prop Ref  Type       Value
--------------------------------------------------------------------------------------------------------------------------
f1                   : DEFAULT                      0    1    func       (f1) : frame=frame@main
f2                   : DEFAULT                      0    1    func       (f2) : frame=frame@main
this                 : DEFAULT                      0    2    instance   namespace@ns1
var1                 : DEFAULT                      0    1    var        2 : type=int
var2                 : DEFAULT                      0    1    var        3 : type=int
==========================================================================================================================


;eof

