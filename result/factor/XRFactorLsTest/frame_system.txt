id=1, name=system, lvl=1, ref=0/0, pid=0(root), entry=27, subject=system, thread=null
==========================================================================================================================
Name(alias)          : EntryId  FrameId  Ref  Type       Value               
--------------------------------------------------------------------------------------------------------------------------
parent               : -168     1        0    frame      root                
use                  : -160     1        0    template   use                 
type#socket          : -159     1        0    atom       type#socket         
socket               : -158     1        1    class      socket              
type#stack           : -157     1        0    atom       type#stack          
stack                : -156     1        1    class      stack               
type#queue           : -155     1        0    atom       type#queue          
queue                : -154     1        1    class      queue               
type#map             : -153     1        0    atom       type#map            
map                  : -152     1        1    class      map                 
clear                : -151     1        1    funcList   '((clear type#map) (clear type#queue) (clear type#set) (clear type#stack)) : frame=null, type=list
                                         1    func       (clear type#set) : frame=system
                                         1    func       (clear type#map) : frame=system
                                         1    func       (clear type#queue) : frame=system
                                         1    func       (clear type#stack) : frame=system
type#set             : -150     1        0    atom       type#set            
set                  : -149     1        1    class      set                 
type#namespace       : -148     1        0    atom       type#namespace      
namespace            : -147     1        1    class      namespace           
ls-print             : -146     1        1    funcList   '((ls-print nil nil) (ls-print nil)) : frame=null, type=list
                                         1    func       (ls-print nil nil) : frame=system
                                         1    func       (ls-print nil) : frame=system
print-list           : -145     1        1    macro      print-list          
to-list              : -144     1        1    funcList   '((to-list list) (to-list type#queue) (to-list type#set) (to-list type#stack)) : frame=null, type=list
                                         1    func       (to-list list) : frame=system
                                         1    func       (to-list type#set) : frame=system
                                         1    func       (to-list type#queue) : frame=system
                                         1    func       (to-list type#stack) : frame=system
is-empty             : -143     1        1    funcList   '((is-empty list) (is-empty type#map) (is-empty type#queue) (is-empty type#set) (is-empty type#stack)) : frame=null, type=list
                                         1    func       (is-empty list) : frame=system
                                         1    func       (is-empty type#set) : frame=system
                                         1    func       (is-empty type#map) : frame=system
                                         1    func       (is-empty type#queue) : frame=system
                                         1    func       (is-empty type#stack) : frame=system
get                  : -142     1        1    funcList   '((get array int int) (get array int) (get list int) (get type#queue int)) : frame=null, type=list
                                         1    func       (get list int) : frame=system
                                         1    func       (get array int) : frame=system
                                         1    func       (get array int int) : frame=system
                                         1    func       (get type#queue int) : frame=system
cmp                  : -141     1        1    func       (cmp nil nil) : frame=system
equal                : -140     1        1    funcList   '((equal nil nil) (equal string string)) : frame=null, type=list
                                         1    func       (equal nil nil) : frame=system
                                         1    func       (equal string string) : frame=system
length-of            : -139     1        1    func       (length-of string) : frame=system
size-of              : -138     1        1    funcList   '((size-of array int) (size-of array) (size-of list) (size-of type#map) (size-of type#queue) (size-of type#set) (size-of type#stack)) : frame=null, type=list
                                         1    func       (size-of list) : frame=system
                                         1    func       (size-of array) : frame=system
                                         1    func       (size-of array int) : frame=system
                                         1    func       (size-of type#set) : frame=system
                                         1    func       (size-of type#map) : frame=system
                                         1    func       (size-of type#queue) : frame=system
                                         1    func       (size-of type#stack) : frame=system
?load-paths          : -137     1        1    var        list:'()            
system               : -3       1        0    frame      system              
root                 : -2       1        0    frame      root                
==========================================================================================================================

