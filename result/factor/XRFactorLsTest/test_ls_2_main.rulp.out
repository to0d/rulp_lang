(print-list (ls root))
;=>nil
;out:
root::!=
root::%
root::&
root::*
root::+
root::-
root::/
root::::
root::<
root::<=
root::=
root::>
root::>=
root::?file.separator
root::?os.name
root::?os.version
root::?path.separator
root::?user.dir
root::?user.home
root::?user.name
root::^
root::access
root::add-array-to-list
root::add-list-to-array
root::add-list-to-list
root::add_search_frame
root::alias
root::and
root::annotation
root::array
root::atom
root::blob
root::blob-length
root::bool
root::break
root::can-cast
root::case
root::class
root::class-of
root::cmp_def
root::compute
root::constant
root::continue
root::cps-count
root::date
root::default
root::defclass
root::defconst
root::defmacro
root::deftemplate
root::defun
root::defvar
root::delete
root::do
root::do-p
root::do-when-obj-deleted
root::do-when-var-changed
root::double
root::equal_def
root::error
root::error-value
root::expr
root::factor
root::false
root::final
root::float
root::foreach
root::frame
root::frame-of
root::from
root::func
root::get-of-array
root::get-of-list
root::has-member
root::if
root::instance
root::int
root::is-const
root::is-stable
root::join
root::lambda
root::let
root::list
root::load
root::long
root::loop
root::ls
root::macro
root::make-array
root::make-blob
root::make-cps
root::make-list
root::make-string
root::member
root::name-of
root::namespace
root::nan
root::native
root::new
root::nil
root::noclass
root::not
root::null
root::open-txt-file
root::or
root::out-to-file
root::parent-of
root::power
root::print
root::print-frame-tree
root::print-global-info
root::print-subject
root::private
root::property-of
root::public
root::random
root::ref
root::remove
root::return
root::reverse
root::root
root::rulp-object-count
root::save-txt-file
root::search-frame-of
root::seta
root::setq
root::size-of-array
root::size-of-list
root::sleep
root::sort
root::static
root::str-char-at
root::str-end-with
root::str-equal
root::str-equal-nocase
root::str-format
root::str-index-of
root::str-last-index-of
root::str-length
root::str-match
root::str-replace
root::str-split
root::str-split-line
root::str-start-with
root::str-substr
root::str-trim
root::str-trim-head
root::str-trim-tail
root::str-upper
root::strcat
root::string
root::subject-of
root::sys-gc
root::sys-time
root::to-atom
root::to-blob
root::to-expr
root::to-int
root::to-named-list
root::to-nonamed-list
root::to-string
root::true
root::try
root::type#namespace
root::type#noclass
root::type-of
root::union
root::uniq
root::value-of
root::value-type-of
root::var
root::when
root::write-blob
root::|
root::~

;eof

(print-list (ls system))
;=>nil
;out:
system::++
system::--
system::?load-paths
system::?op-cps
system::?op-stable
system::?trace
system::add
system::add-all
system::clear
system::cmp
system::equal
system::get
system::is-blank
system::is-empty
system::length-of
system::ls-print
system::map
system::print-list
system::println
system::queue
system::root
system::set
system::size-of
system::stack
system::system
system::to-array
system::to-list
system::type#map
system::type#queue
system::type#set
system::type#stack
system::use

;eof

(ls-print root)
;=>nil
;out:
mbr=!=, name=!=, type=factor, property='(public)
mbr=%, name=%, type=factor, property='(public)
mbr=&, name=&, type=factor, property='(public)
mbr=*, name=*, type=factor, property='(public)
mbr=+, name=+, type=factor, property='(public)
mbr=-, name=-, type=factor, property='(public)
mbr=/, name=/, type=factor, property='(public)
mbr=::, name=::, type=factor, property='(public)
mbr=<, name=<, type=factor, property='(public)
mbr=<=, name=<=, type=factor, property='(public)
mbr==, name==, type=factor, property='(public)
mbr=>, name=>, type=factor, property='(public)
mbr=>=, name=>=, type=factor, property='(public)
mbr=?file.separator, name=?file.separator, type=var, property='(public), value="\"
mbr=?os.name, name=?os.name, type=var, property='(public), value="Windows 10"
mbr=?os.version, name=?os.version, type=var, property='(public), value="10.0"
mbr=?path.separator, name=?path.separator, type=var, property='(public), value=";"
mbr=?user.dir, name=?user.dir, type=var, property='(public), value="C:\data\itool\irulp_base"
mbr=?user.home, name=?user.home, type=var, property='(public), value="C:\Users\to0d"
mbr=?user.name, name=?user.name, type=var, property='(public), value="to0d"
mbr=^, name=^, type=factor, property='(public)
mbr=access, name=access, type=factor, property='(public)
mbr=add-array-to-list, name=add-array-to-list, type=factor, property='(public)
mbr=add-list-to-array, name=add-list-to-array, type=factor, property='(public)
mbr=add-list-to-list, name=add-list-to-list, type=factor, property='(public)
mbr=add_search_frame, name=add_search_frame, type=factor, property='(public)
mbr=alias, name=alias, type=factor, property='(public)
mbr=and, name=and, type=factor, property='(public)
mbr=annotation, name=annotation, type=atom, property='(public)
mbr=array, name=array, type=atom, property='(public)
mbr=atom, name=atom, type=atom, property='(public)
mbr=blob, name=blob, type=atom, property='(public)
mbr=blob-length, name=blob-length, type=factor, property='(public)
mbr=bool, name=bool, type=atom, property='(public)
mbr=break, name=break, type=factor, property='(public)
mbr=can-cast, name=can-cast, type=factor, property='(public)
mbr=case, name=case, type=factor, property='(public)
mbr=class, name=class, type=atom, property='(public)
mbr=class-of, name=class-of, type=factor, property='(public)
mbr=cmp_def, name=cmp_def, type=factor, property='(public)
mbr=compute, name=compute, type=factor, property='(public)
mbr=constant, name=constant, type=atom, property='(public)
mbr=continue, name=continue, type=factor, property='(public)
mbr=cps-count, name=cps-count, type=factor, property='(public)
mbr=date, name=date, type=factor, property='(public)
mbr=default, name=default, type=atom, property='(public)
mbr=defclass, name=defclass, type=factor, property='(public)
mbr=defconst, name=defconst, type=factor, property='(public)
mbr=defmacro, name=defmacro, type=factor, property='(public)
mbr=deftemplate, name=deftemplate, type=factor, property='(public)
mbr=defun, name=defun, type=factor, property='(public)
mbr=defvar, name=defvar, type=factor, property='(public)
mbr=delete, name=delete, type=factor, property='(public)
mbr=do, name=do, type=factor, property='(public)
mbr=do-p, name=do-p, type=factor, property='(public)
mbr=do-when-obj-deleted, name=do-when-obj-deleted, type=factor, property='(public)
mbr=do-when-var-changed, name=do-when-var-changed, type=factor, property='(public)
mbr=double, name=double, type=atom, property='(public)
mbr=equal_def, name=equal_def, type=factor, property='(public)
mbr=error, name=error, type=factor, property='(public)
mbr=error-value, name=error-value, type=factor, property='(public)
mbr=expr, name=expr, type=atom, property='(public)
mbr=factor, name=factor, type=atom, property='(public)
mbr=false, name=nil, type=bool, property='(public)
mbr=final, name=final, type=atom, property='(public)
mbr=float, name=float, type=atom, property='(public)
mbr=foreach, name=foreach, type=factor, property='(public)
mbr=frame, name=frame, type=atom, property='(public)
mbr=frame-of, name=frame-of, type=factor, property='(public)
mbr=from, name=from, type=atom, property='(public)
mbr=func, name=func, type=atom, property='(public)
mbr=get-of-array, name=get-of-array, type=factor, property='(public)
mbr=get-of-list, name=get-of-list, type=factor, property='(public)
mbr=has-member, name=has-member, type=factor, property='(public)
mbr=if, name=if, type=factor, property='(public)
mbr=instance, name=instance, type=atom, property='(public)
mbr=int, name=int, type=atom, property='(public)
mbr=is-const, name=is-const, type=factor, property='(public)
mbr=is-stable, name=is-stable, type=factor, property='(public)
mbr=join, name=join, type=factor, property='(public)
mbr=lambda, name=lambda, type=factor, property='(public)
mbr=let, name=let, type=factor, property='(public)
mbr=list, name=list, type=atom, property='(public)
mbr=load, name=load, type=factor, property='(public)
mbr=long, name=long, type=atom, property='(public)
mbr=loop, name=loop, type=factor, property='(public)
mbr=ls, name=ls, type=factor, property='(public)
mbr=macro, name=macro, type=atom, property='(public)
mbr=make-array, name=make-array, type=factor, property='(public)
mbr=make-blob, name=make-blob, type=factor, property='(public)
mbr=make-cps, name=make-cps, type=factor, property='(public)
mbr=make-list, name=make-list, type=factor, property='(public)
mbr=make-string, name=make-string, type=factor, property='(public)
mbr=member, name=member, type=atom, property='(public)
mbr=name-of, name=name-of, type=factor, property='(public)
mbr=namespace, name=namespace, type=class, property='(public), class-property='()
mbr=nan, name=nan, type=atom, property='(public)
mbr=native, name=native, type=atom, property='(public)
mbr=new, name=new, type=factor, property='(public)
mbr=nil, name=nil, type=null, property='(public)
mbr=noclass, name=noclass, type=class, property='(public), class-property='(final)
mbr=not, name=not, type=factor, property='(public)
mbr=null, name=null, type=atom, property='(public)
mbr=open-txt-file, name=open-txt-file, type=factor, property='(public)
mbr=or, name=or, type=factor, property='(public)
mbr=out-to-file, name=out-to-file, type=factor, property='(public)
mbr=parent-of, name=parent-of, type=factor, property='(public)
mbr=power, name=power, type=factor, property='(public)
mbr=print, name=print, type=factor, property='(public)
mbr=print-frame-tree, name=print-frame-tree, type=factor, property='(public)
mbr=print-global-info, name=print-global-info, type=factor, property='(public)
mbr=print-subject, name=print-subject, type=factor, property='(public)
mbr=private, name=private, type=atom, property='(public)
mbr=property-of, name=property-of, type=factor, property='(public)
mbr=public, name=public, type=atom, property='(public)
mbr=random, name=random, type=factor, property='(public)
mbr=ref, name=ref, type=factor, property='(public)
mbr=remove, name=remove, type=factor, property='(public)
mbr=return, name=return, type=factor, property='(public)
mbr=reverse, name=reverse, type=factor, property='(public)
mbr=root, name=root, type=frame, property='(public)
mbr=rulp-object-count, name=rulp-object-count, type=factor, property='(public)
mbr=save-txt-file, name=save-txt-file, type=factor, property='(public)
mbr=search-frame-of, name=search-frame-of, type=factor, property='(public)
mbr=seta, name=seta, type=factor, property='(public)
mbr=setq, name=setq, type=factor, property='(public)
mbr=size-of-array, name=size-of-array, type=factor, property='(public)
mbr=size-of-list, name=size-of-list, type=factor, property='(public)
mbr=sleep, name=sleep, type=factor, property='(public)
mbr=sort, name=sort, type=factor, property='(public)
mbr=static, name=static, type=atom, property='(public)
mbr=str-char-at, name=str-char-at, type=factor, property='(public)
mbr=str-end-with, name=str-end-with, type=factor, property='(public)
mbr=str-equal, name=str-equal, type=factor, property='(public)
mbr=str-equal-nocase, name=str-equal-nocase, type=factor, property='(public)
mbr=str-format, name=str-format, type=factor, property='(public)
mbr=str-index-of, name=str-index-of, type=factor, property='(public)
mbr=str-last-index-of, name=str-last-index-of, type=factor, property='(public)
mbr=str-length, name=str-length, type=factor, property='(public)
mbr=str-match, name=str-match, type=factor, property='(public)
mbr=str-replace, name=str-replace, type=factor, property='(public)
mbr=str-split, name=str-split, type=factor, property='(public)
mbr=str-split-line, name=str-split-line, type=factor, property='(public)
mbr=str-start-with, name=str-start-with, type=factor, property='(public)
mbr=str-substr, name=str-substr, type=factor, property='(public)
mbr=str-trim, name=str-trim, type=factor, property='(public)
mbr=str-trim-head, name=str-trim-head, type=factor, property='(public)
mbr=str-trim-tail, name=str-trim-tail, type=factor, property='(public)
mbr=str-upper, name=str-upper, type=factor, property='(public)
mbr=strcat, name=strcat, type=factor, property='(public)
mbr=string, name=string, type=atom, property='(public)
mbr=subject-of, name=subject-of, type=factor, property='(public)
mbr=sys-gc, name=sys-gc, type=factor, property='(public)
mbr=sys-time, name=sys-time, type=factor, property='(public)
mbr=to-atom, name=to-atom, type=factor, property='(public)
mbr=to-blob, name=to-blob, type=factor, property='(public)
mbr=to-expr, name=to-expr, type=factor, property='(public)
mbr=to-int, name=to-int, type=factor, property='(public)
mbr=to-named-list, name=to-named-list, type=factor, property='(public)
mbr=to-nonamed-list, name=to-nonamed-list, type=factor, property='(public)
mbr=to-string, name=to-string, type=factor, property='(public)
mbr=true, name=nil, type=bool, property='(public)
mbr=try, name=try, type=factor, property='(public)
mbr=type#namespace, name=type#namespace, type=atom, property='(public)
mbr=type#noclass, name=type#noclass, type=atom, property='(public)
mbr=type-of, name=type-of, type=factor, property='(public)
mbr=union, name=union, type=factor, property='(public)
mbr=uniq, name=uniq, type=factor, property='(public)
mbr=value-of, name=value-of, type=factor, property='(public)
mbr=value-type-of, name=value-type-of, type=factor, property='(public)
mbr=var, name=var, type=atom, property='(public)
mbr=when, name=when, type=factor, property='(public)
mbr=write-blob, name=write-blob, type=factor, property='(public)
mbr=|, name=|, type=factor, property='(public)
mbr=~, name=~, type=factor, property='(public)

;eof

(ls-print system)
;=>nil
;out:
mbr=++, name=++, type=macro, property='(public)
mbr=--, name=--, type=macro, property='(public)
mbr=?load-paths, name=?load-paths, type=var, property='(public), value="'()"
mbr=?op-cps, name=?op-cps, type=var, property='(public), value="false"
mbr=?op-stable, name=?op-stable, type=var, property='(public), value="false"
mbr=?trace, name=?trace, type=var, property='(public), value="false"
mbr=add, name='((add array nil nil nil) (add array nil nil) (add array nil) (add list nil nil nil) (add list nil nil) (add list nil)), type=func, property='(public)
mbr=add-all, name=(add-all list list), type=func, property='(public)
mbr=clear, name='((clear type#map) (clear type#queue) (clear type#set) (clear type#stack)), type=func, property='(public)
mbr=cmp, name=(cmp nil nil), type=func, property='(public)
mbr=equal, name='((equal nil nil) (equal string string)), type=func, property='(public)
mbr=get, name='((get array int int) (get array int) (get list int) (get type#queue int)), type=func, property='(public)
mbr=is-blank, name=(is-blank string), type=func, property='(public)
mbr=is-empty, name='((is-empty array) (is-empty list) (is-empty string) (is-empty type#map) (is-empty type#queue) (is-empty type#set) (is-empty type#stack)), type=func, property='(public)
mbr=length-of, name='((length-of blob) (length-of string)), type=func, property='(public)
mbr=ls-print, name='((ls-print nil nil) (ls-print nil)), type=func, property='(public)
mbr=map, name=map, type=class, property='(public), class-property='(final)
mbr=print-list, name=print-list, type=macro, property='(public)
mbr=println, name='((println nil nil nil nil nil nil nil nil nil) (println nil nil nil nil nil nil nil nil) (println nil nil nil nil nil nil nil) (println nil nil nil nil nil nil) (println nil nil nil nil nil) (println nil nil nil nil) (println nil nil nil) (println nil nil) (println nil) (println)), type=func, property='(public)
mbr=queue, name=queue, type=class, property='(public), class-property='(final)
mbr=root, name=root, type=frame, property='(public)
mbr=set, name=set, type=class, property='(public), class-property='(final)
mbr=size-of, name='((size-of array int) (size-of array) (size-of list) (size-of type#map) (size-of type#queue) (size-of type#set) (size-of type#stack)), type=func, property='(public)
mbr=stack, name=stack, type=class, property='(public), class-property='(final)
mbr=system, name=system, type=frame, property='(public)
mbr=to-array, name=(to-array list), type=func, property='(public)
mbr=to-list, name='((to-list array) (to-list list) (to-list type#queue) (to-list type#set) (to-list type#stack)), type=func, property='(public)
mbr=type#map, name=type#map, type=atom, property='(public)
mbr=type#queue, name=type#queue, type=atom, property='(public)
mbr=type#set, name=type#set, type=atom, property='(public)
mbr=type#stack, name=type#stack, type=atom, property='(public)
mbr=use, name=use, type=template, property='(public)

;eof

