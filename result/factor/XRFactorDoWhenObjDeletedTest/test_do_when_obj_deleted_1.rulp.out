(do
    (defvar x 1)
    (do-when-obj-deleted x (lambda (?obj) (print "obj'" (name-of ?obj) "' was deleted")))
    (print-subject local)
)
;=>nil
;out:
id=3, name=do, lvl=3, ref=2/2, entry=2, pid=2(main), subject=do
==========================================================================================================================
Name(alias)          : EntryId  FrameId  Ref  Type       Value               
--------------------------------------------------------------------------------------------------------------------------
x                    : 4        3        1    var        1 : type=int        
local                : 5        3        2    frame      frame@do            
==========================================================================================================================

obj'x' was deleted
;eof

(print-subject local)
;=>nil
;out:
id=2, name=main, lvl=2, ref=2/2, entry=4, pid=1(system), subject=main
==========================================================================================================================
Name(alias)          : EntryId  FrameId  Ref  Type       Value               
--------------------------------------------------------------------------------------------------------------------------
root                 : 1        2        0    frame      frame@root          
system               : 2        2        0    frame      frame@system        
main                 : 3        2        2    frame      frame@main          
local                : 7        2        2    frame      frame@main          
==========================================================================================================================


;eof

