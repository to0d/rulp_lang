(defclass class1
    (defvar ?value 1)[public]
    (defun dump () (print ?value "\n"))
)
;=>class1

(defclass class2
    (defvar ?descriptors nil)[public]
    (defun load (?count)
        (defvar ?_descriptors {})    
        (loop for ?x from 1 to ?count do
            (defvar ?descriptor (new class1))
            (setq ?descriptor::?value ?x)
            (add ?_descriptors ?descriptor)
        )
        (setq ?descriptors (to-list ?_descriptors))
    )
    (defun dump ()
        (loop for ?d in ?descriptors do
            (?d::dump)
        )

    )
)
;=>class2

(defvar ?o2 (new class2))
;=>&?o2

(?o2::load 3)
;=>nil

(?o2::dump)
;=>nil
;out:
1
2
3

;eof

