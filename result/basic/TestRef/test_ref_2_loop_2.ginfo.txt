Global Info:

Total runtime info:
==========================================================================================================================
                          Name:     info
--------------------------------------------------------------------------------------------------------------------------
           Interpreter call id:      241
    Interpreter call level/max:        0        7
               Frame max level:        9
                  Frame max id:       13
           Frame free id count:        4
==========================================================================================================================

Optimize info:
==========================================================================================================================
      Name: Status
--------------------------------------------------------------------------------------------------------------------------
       ERO: rebuild=0, compute=0
       CCO: rebuild=0, expr=0, call=0, cache=0, reuse=0
       TCO: rebuild=0, expr=0, call=0, node=0, compute=0, level=0, stack=0
       LCO: rebuild=0, arg=0, pass=0, hit=0
==========================================================================================================================

Expression compute count:
==========================================================================================================================
     RType:    Count
--------------------------------------------------------------------------------------------------------------------------
    factor:      284
      func:        9
==========================================================================================================================

Callable stats info: callId=241, row=20, column=61(4), value-max=10, value-unit=2^x
==========================================================================================================================
   Frame    RType  Count  Ref Object                         3333333333333333333333333333333333333333333333333334433334356 max=30, unit=2^x
--------------------------------------------------------------------------------------------------------------------------
    root   factor    179    0 add-attribute                   1333333333333333333333333333333333333333333332              
    root   factor     50    0 defun                                                                        23331 33333325 
    root   factor     10    0 defvar                                                                            31     113
    root   factor      6    0 alias                          33                                                           
    root   factor      5    0 defmacro                                                                         31      1  
    root   factor      4    0 setq                                                                                       3
    root   factor      4    0 return                                                                                     3
    root   factor      4    0 new                                                                                       13
    root   factor      4    0 make-list                                                                         31        
    root   factor      3    0 print                                                                                      3
    root   factor      3    0 deftemplate                                                                             3   
    root   factor      3    0 add-list-to-array                                                                          3
  system funcList      3    1 add                                                                                        3
    root   factor      2    0 loop                                                                                       2
    root   factor      2    0 load                                                                                    1 1 
    root   factor      2    0 defclass                                                                                  2 
  system funcList      1    1 to-list                                                                                    1
    root   factor      1    0 make-array                                                                                 1
    root   factor      1    0 do                                                                                         1
    root   factor      1    0 add-array-to-list                                                                          1
==========================================================================================================================

Object create count:
==========================================================================================================================
       RType:       Create       Delete        Exist
--------------------------------------------------------------------------------------------------------------------------
        atom:         1456            0         1456
      string:           42            0           42
        list:           17            0           17
        expr:          657            6          651
       array:            1            1            0
         var:           36           16           20
        func:           73            0           73
    template:            1            0            1
       macro:            5            0            5
    instance:            4            0            4
       class:            2            0            2
      member:           23            1           22
       frame:           24           18            6
 interpreter:            1            0
  frameEntry:          274            0
      lambda:            5            0
==========================================================================================================================

Global frame list: total=6

id=2, name=main, lvl=2, ref=3/3, entry=20, pid=1(system), subject=main
==========================================================================================================================
Name(alias)          : EntryId  FrameId  Ref  Type       Value               
--------------------------------------------------------------------------------------------------------------------------
root                 : 1        2        0    frame      frame@root          
system               : 2        2        0    frame      frame@system        
main                 : 3        2        3    frame      frame@main          
is-empty             : 4        2        2    funcList   '((is-empty array) (is-empty list) (is-empty string)) : frame=null, type=list
                                         2    func       (is-empty list) : frame=frame@system
                                         2    func       (is-empty array) : frame=frame@system
                                         1    func       (is-empty string) : frame=frame@main
is-blank             : 5        2        2    func       (is-blank string) : frame=frame@main
file-prename         : 6        2        2    func       (file-prename string) : frame=frame@main
file-subffix         : 7        2        2    func       (file-subffix string) : frame=frame@main
?script-path         : 8        2        2    var        result\basic\TestRef\test_ref_2_loop_2.rulp : type=string
script_out           : 9        2        2    macro      script_out          
_ginfo               : 10       2        2    funcList   '((_ginfo string) (_ginfo)) : frame=null, type=list
                                         2    func       (_ginfo) : frame=frame@main
                                         1    func       (_ginfo string) : frame=frame@main
print-list           : 11       2        3    funcList   '((print-list list) (print-list nil nil) (print-list nil)) : frame=null, type=list
                                         2    func       (print-list list) : frame=frame@main
                                         1    func       (print-list nil nil) : frame=frame@main
                                         1    func       (print-list nil) : frame=frame@main
sort                 : 12       2        4    funcList   '((sort array func) (sort array) (sort list func) (sort list)) : frame=null, type=list
                                         2    func       (sort list) : frame=frame@main
                                         1    func       (sort list func) : frame=frame@main
                                         1    func       (sort array) : frame=frame@main
                                         1    func       (sort array func) : frame=frame@main
to-valid-path        : 13       2        2    func       (to-valid-path string) : frame=frame@main
day-is-bigger-than   : 14       2        2    func       (day-is-bigger-than string string) : frame=frame@main
day-is-smaller-than  : 15       2        2    func       (day-is-smaller-than string string) : frame=frame@main
class1               : 16       2        1    class      class1              
type#class1          : 17       2        0    atom       type#class1         
class2               : 18       2        1    class      class2              
type#class2          : 19       2        0    atom       type#class2         
?o2                  : 20       2        1    var        class2@un0 : type=instance
==========================================================================================================================


id=3, name=SF-class2-0, lvl=3, ref=2/2, entry=0, pid=2(main), subject=class2

id=4, name=SF-un0-1, lvl=4, ref=3/4, entry=0, pid=3(SF-class2-0), subject=un0

id=5, name=SF-un3-5, lvl=4, ref=2/3, entry=0, pid=9(SF-class1-2), subject=un3

id=6, name=SF-un1-3, lvl=4, ref=2/3, entry=0, pid=9(SF-class1-2), subject=un1

id=9, name=SF-class1-2, lvl=3, ref=4/4, entry=0, pid=2(main), subject=class1

id=10, name=SF-un2-4, lvl=4, ref=2/3, entry=0, pid=9(SF-class1-2), subject=un2

Root var list: total=5
==========================================================================================================================
Var                  : Value
--------------------------------------------------------------------------------------------------------------------------
?load-class          : '()
?load-jar            : '()
?load-script         : '("C:\\data\\rs\\rulp\\string.rulp" "C:\\data\\rs\\rulp\\tool.rulp")
?path                : '()
?trace               : false
==========================================================================================================================

Global frame tree:

->FRAME(root): id=0, lvl=0, subject=root
    ->FRAME(system): id=1, lvl=1, subject=system
        ->FRAME(main): id=2, lvl=2, subject=main
            ->FRAME(SF-class2-0): id=3, lvl=3, subject=class2
                ->FRAME(SF-un0-1): id=4, lvl=4, subject=un0
            ->FRAME(SF-class1-2): id=9, lvl=3, subject=class1
                ->FRAME(SF-un3-5): id=5, lvl=4, subject=un3
                ->FRAME(SF-un1-3): id=6, lvl=4, subject=un1
                ->FRAME(SF-un2-4): id=10, lvl=4, subject=un2

Global Subject list:

name=class1, string=class1, lvl=0, ref=1/3, parent=null, final=false, mbrs=2, frame=9(SF-class1-2)
==========================================================================================================================
Name                           : Access  Final Static Inherit Prop Ref  Type       Value
--------------------------------------------------------------------------------------------------------------------------
?value                         : PUBLIC                       0    1    var        1 : type=int
dump                           : DEFAULT                      0    1    func       (dump) : frame=frame@main
==========================================================================================================================

name=class2, string=class2, lvl=0, ref=1/3, parent=null, final=false, mbrs=3, frame=3(SF-class2-0)
==========================================================================================================================
Name                           : Access  Final Static Inherit Prop Ref  Type       Value
--------------------------------------------------------------------------------------------------------------------------
?descriptors                   : PUBLIC                       0    1    var        nil
dump                           : DEFAULT                      0    1    func       (dump) : frame=frame@main
load                           : DEFAULT                      0    1    func       (load nil) : frame=frame@main
==========================================================================================================================


