(defun fun1 (?v) (return (lambda () (return (* ?v ?v)))))
;=>fun1

(defvar ?f (fun1 2))
;=>&?f

(?f)
;=>4

(?f)
;=>4

(print-global-info)
;=>nil
;out:
Global Info:

Total runtime info:
==========================================================================================================================
                          Name:     info
--------------------------------------------------------------------------------------------------------------------------
     Interpreter call id/level:       75        1
             CPS support/count:    false        0
               Frame max level:        4
                  Frame max id:        5
           Frame free id count:        1
==========================================================================================================================

Expression compute count:
==========================================================================================================================
     RType:    Count
--------------------------------------------------------------------------------------------------------------------------
    factor:       79
      func:        3
==========================================================================================================================

Callable stats info: callId=75, row=11, column=38(2), value-max=2, value-unit=2^x
==========================================================================================================================
   Frame    RType  Count  Ref Object                         12222222222222222222222222222222222243 max=6, unit=2^x
--------------------------------------------------------------------------------------------------------------------------
    root   factor     54    0 defun                              2222222111 2222222222 2212122122  
    root   factor      6    0 alias                          1221                                  
    root   factor      4    0 defclass                                                1  1 1  1    
    root   factor      3    0 return                                                             21
    root   factor      3    0 deftemplate                                 12                       
    root   factor      3    0 defmacro                                  11            1            
    root   factor      2    0 defvar                            1                                1 
    root   factor      2    0 *                                                                  11
    root   factor      1    0 print-global-info                                                   1
    root   factor      1    0 lambda                                                             1 
    main     func      1    1 (fun1 nil)                                                         1 
==========================================================================================================================

Object create count:
==========================================================================================================================
       RType:       Create       Delete        Exist
--------------------------------------------------------------------------------------------------------------------------
        atom:          891            0          891
      string:           29            0           29
        list:            6            0            6
        expr:          475            3          472
       array:            1            0            1
         var:           19            0           19
        func:          105            0          105
    template:            1            0            1
       macro:            3            0            3
       class:            4            0            4
      member:          117            0          117
       frame:            3            2            1
 interpreter:            1            0
  frameEntry:          217            0
      lambda:            1            0
==========================================================================================================================

Global frame list: total=1

id=2, name=main, lvl=2, ref=2/2, entry=6, pid=1(system), subject=main
==========================================================================================================================
Name(alias)          : EntryId  FrameId  Ref  Type       Value               
--------------------------------------------------------------------------------------------------------------------------
root                 : 1        2        0    frame      frame@root          
system               : 2        2        0    frame      frame@system        
main                 : 3        2        2    frame      frame@main          
fun1                 : 4        2        1    func       (fun1 nil) : frame=frame@main
?f                   : 5        2        1    var        lambda : type=func  
?rv                  : 7        2        1    var        lambda : type=func  
==========================================================================================================================


id=3, name=_$fun$_fun1, lvl=3, ref=1/2, entry=2, pid=2(main), subject=_$fun$_fun1
==========================================================================================================================
Name(alias)          : EntryId  FrameId  Ref  Type       Value               
--------------------------------------------------------------------------------------------------------------------------
?v                   : 6        3        1    var        2 : type=int        
?rv                  : 8        3        1    var        4 : type=int        
==========================================================================================================================

Global frame tree:

->FRAME(root): id=0, lvl=0, subject=root
    ->FRAME(system): id=1, lvl=1, subject=system
        ->FRAME(main): id=2, lvl=2, subject=main
            ->FRAME(_$fun$_fun1): id=3, lvl=3, subject=_$fun$_fun1

Global Subject list:


;eof

