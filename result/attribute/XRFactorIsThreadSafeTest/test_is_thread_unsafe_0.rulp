(load "tool")
(load "map")
(load "queue")
(load "set")
(load "stack")
;=>

(defun list-of-is-thread-safe-objects (?subject) 
    (if (equal ?subject local)
    
        (list-of-is-thread-safe-objects (value-of (:: (value-of local::parent) parent)))
        
        (loop for ?mbr in (list-of ?subject) do 
            (if (not (is-thread-safe  $(value-of (value-of ?mbr))))
                (print (str-format "obj=%-20s, type=%s\n" 
                            (name-of $(value-of ?mbr)) 
                             (to-string (type-of $(value-of (value-of ?mbr))))))
            )
        )
    )
)
;;;

(list-of-is-thread-safe-objects root)
;;;

(list-of-is-thread-safe-objects system)
;;;

(list-of-is-thread-safe-objects main)
;;;
