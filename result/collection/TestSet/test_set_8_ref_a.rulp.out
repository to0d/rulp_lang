(load "set")
;=>nil

(rulp-object-count frame)
;=>0

(rulp-object-count instance)
;=>0

(defvar ?x 0)
;=>&?x

(defun fun_add (?set)
    (do
        (defclass class1
            (defvar ?value)
            (defun init () (setq ?value 0))
            (defun ~init () (do (print this " ~init.") (setq ?x (+ ?x 1))))
        )
        (new class1 o1)
        (?set::add o1)
    )
)
;=>fun_add

(new set s1)
;=>s1

(fun_add s1)
;=>nil

?x
;=>0

(rulp-object-count frame)
;=>5

(rulp-object-count instance)
;=>3

(_ginfo "a")
;=>nil

(delete s1)     ;; delete object
;=>nil

?x
;=>0

(rulp-object-count frame)
;=>4

(rulp-object-count instance)
;=>2

(_ginfo "b")
;=>nil

