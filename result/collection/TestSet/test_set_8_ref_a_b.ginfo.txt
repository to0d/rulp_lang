Global Info:

Total runtime info:
==========================================================================================================================
                          Name:     info
--------------------------------------------------------------------------------------------------------------------------
           Interpreter call id:      249
    Interpreter call level/max:        5       11
               Frame max level:        7
                  Frame max id:       12
           Frame free id count:        3
==========================================================================================================================

Optimize info:
==========================================================================================================================
      Name: Status
--------------------------------------------------------------------------------------------------------------------------
       ERO: rebuild=0, compute=0
       CCO: rebuild=0, expr=0, call=0, cache=0, reuse=0
       TCO: rebuild=0, expr=0, call=0, node=0, compute=0, level=0, stack=0
       LCO: rebuild=0, arg=0, pass=0, hit=0
==========================================================================================================================

Expression compute count:
==========================================================================================================================
     RType:    Count
--------------------------------------------------------------------------------------------------------------------------
    factor:      325
      func:       10
     macro:        2
==========================================================================================================================

Callable stats info: callId=249, row=32, column=63(4), value-max=20, value-unit=2^x
==========================================================================================================================
   Frame    RType  Count  Ref Object                         333333333333333333333333333333333333333333333333334333333654466 max=28, unit=2^x
--------------------------------------------------------------------------------------------------------------------------
    root   factor    178    0 add-attribute                   1333333333333333333333333333333333333333333331                
    root   factor     64    0 defun                                                                        3333 333332641   
    root   factor     12    0 defvar                                                                           3      1 1 33
    root   factor      6    0 setq                                                                                      1122
    root   factor      6    0 rulp-object-count                                                                        11211
    root   factor      6    0 alias                          33                                                             
    root   factor      5    0 do                                                                                         122
    root   factor      5    0 defmacro                                                                                4     
    root   factor      4    0 return                                                                                      22
    root   factor      4    0 make-list                                                                        3            
    root   factor      4    0 if                                                                                          22
    root   factor      4    0 +                                                                                           22
    root   factor      3    0 deftemplate                                                                            21     
    root   factor      2    0 str-substr                                                                                  11
    root   factor      2    0 str-length                                                                                  11
    root   factor      2    0 str-last-index-of                                                                           11
    main    macro      2    2 script_out                                                                                  11
    root   factor      2    0 print-global-info                                                                           11
    root   factor      2    0 out-to-file                                                                                 11
    root   factor      2    0 new                                                                                       11  
    root   factor      2    0 load                                                                                    11    
  system funcList      2    1 length-of                                                                                   11
    main     func      2    2 (file-prename string)                                                                       11
    root   factor      2    0 defclass                                                                                 1 1  
    main funcList      2    3 _ginfo                                                                                      11
    root   factor      2    0 >                                                                                           11
    root   factor      2    0 !=                                                                                          11
    main   member      1    1 set::_set_init                                                                            1   
    main   member      1    1 set::_set_add                                                                              1  
    root   factor      1    0 load-class                                                                               1    
    main     func      1    1 (fun_add nil)                                                                              1  
    root   factor      1    0 delete                                                                                      1 
==========================================================================================================================

Object create count:
==========================================================================================================================
       RType:       Create       Delete        Exist
--------------------------------------------------------------------------------------------------------------------------
        atom:         1734            0         1734
      string:           56            0           56
        list:           14            0           14
        expr:          824            9          815
         var:           34           14           20
        func:           95            4           91
    template:            1            0            1
       macro:            5            0            5
    instance:            3            1            2
       class:            2            1            1
      member:           38            7           31
       frame:           19           13            6
 interpreter:            1            0
  frameEntry:          291            0
      lambda:            3            0
==========================================================================================================================

Global frame list: total=6

id=2, name=main, lvl=2, ref=4/4, entry=30, pid=1(system), subject=main
==========================================================================================================================
Name(alias)          : EntryId  FrameId  Ref  Type       Value               
--------------------------------------------------------------------------------------------------------------------------
root                 : 1        2        0    frame      frame@root          
system               : 2        2        0    frame      frame@system        
main                 : 3        2        4    frame      frame@main          
--                   : 4        2        2    macro      --                  
++                   : 5        2        2    macro      ++                  
inc                  : 6        2        2    macro      inc                 
dec                  : 7        2        2    macro      dec                 
max                  : 8        2        2    funcList   '((max list) (max nil nil)) : frame=null, type=list
                                         2    func       (max nil nil) : frame=frame@main
                                         1    func       (max list) : frame=frame@main
min                  : 9        2        2    funcList   '((min list) (min nil nil)) : frame=null, type=list
                                         2    func       (min nil nil) : frame=frame@main
                                         1    func       (min list) : frame=frame@main
is-empty             : 10       2        3    funcList   '((is-empty array) (is-empty list) (is-empty string) (is-empty type#set)) : frame=null, type=list
                                         2    func       (is-empty list) : frame=frame@system
                                         2    func       (is-empty array) : frame=frame@system
                                         1    func       (is-empty string) : frame=frame@main
                                         1    func       (is-empty type#set) : frame=frame@main
is-blank             : 11       2        2    func       (is-blank string) : frame=frame@main
file-prename         : 12       2        2    func       (file-prename string) : frame=frame@main
file-subffix         : 13       2        2    func       (file-subffix string) : frame=frame@main
str-split-line       : 14       2        2    func       (str-split-line string) : frame=frame@main
to-one-line          : 15       2        2    func       (to-one-line list) : frame=frame@main
sort                 : 16       2        4    funcList   '((sort array func) (sort array) (sort list func) (sort list)) : frame=null, type=list
                                         2    func       (sort list) : frame=frame@main
                                         1    func       (sort list func) : frame=frame@main
                                         1    func       (sort array) : frame=frame@main
                                         1    func       (sort array func) : frame=frame@main
print-list           : 17       2        3    funcList   '((print-list list) (print-list nil nil) (print-list nil)) : frame=null, type=list
                                         2    func       (print-list list) : frame=frame@main
                                         1    func       (print-list nil nil) : frame=frame@main
                                         1    func       (print-list nil) : frame=frame@main
to-valid-path        : 18       2        2    func       (to-valid-path string) : frame=frame@main
day-is-bigger-than   : 19       2        2    func       (day-is-bigger-than string string) : frame=frame@main
day-is-smaller-than  : 20       2        2    func       (day-is-smaller-than string string) : frame=frame@main
?script-path         : 21       2        2    var        result\collection\TestSet\test_set_8_ref_a.rulp : type=string
script_out           : 22       2        2    macro      script_out          
_ginfo               : 23       2        3    funcList   '((_ginfo string) (_ginfo)) : frame=null, type=list
                                         2    func       (_ginfo) : frame=frame@main
                                         1    func       (_ginfo string) : frame=frame@main
set                  : 24       2        2    class      set                 
type#set             : 25       2        0    atom       type#set            
size-of              : 26       2        2    funcList   '((size-of array int) (size-of array) (size-of list) (size-of type#set)) : frame=null, type=list
                                         2    func       (size-of list) : frame=frame@system
                                         2    func       (size-of array) : frame=frame@system
                                         2    func       (size-of array int) : frame=frame@system
                                         1    func       (size-of type#set) : frame=frame@main
clear                : 27       2        2    func       (clear type#set) : frame=frame@main
to-list              : 28       2        2    funcList   '((to-list array) (to-list iterator) (to-list list) (to-list type#set)) : frame=null, type=list
                                         2    func       (to-list list) : frame=frame@system
                                         2    func       (to-list array) : frame=frame@system
                                         2    func       (to-list iterator) : frame=frame@system
                                         1    func       (to-list type#set) : frame=frame@main
?x                   : 29       2        1    var        0 : type=int        
fun_add              : 30       2        1    func       (fun_add nil) : frame=frame@main
==========================================================================================================================


id=3, name=SF-set-0, lvl=3, ref=1/2, entry=0, pid=2(main), subject=set

id=5, name=_$fun$_fun_add, lvl=3, ref=1/3, entry=1, pid=2(main), subject=_$fun$_fun_add
==========================================================================================================================
Name(alias)          : EntryId  FrameId  Ref  Type       Value               
--------------------------------------------------------------------------------------------------------------------------
?set                 : 33       5        1    var        set@s1 : type=instance
==========================================================================================================================

id=7, name=SF-class1-2, lvl=5, ref=1/2, entry=0, pid=5(_$fun$_fun_add), subject=class1

id=8, name=SF-o1-3, lvl=6, ref=2/3, entry=0, pid=7(SF-class1-2), subject=o1

id=10, name=do, lvl=4, ref=1/2, entry=2, pid=11(_$fun$__ginfo), subject=do
==========================================================================================================================
Name(alias)          : EntryId  FrameId  Ref  Type       Value               
--------------------------------------------------------------------------------------------------------------------------
?new_name            : 47       10       1    var        _b.ginfo.txt : type=string
?rv                  : 49       10       1    var        result\collection\TestSet\test_set_8_ref_a : type=string
==========================================================================================================================

id=11, name=_$fun$__ginfo, lvl=3, ref=2/2, entry=1, pid=2(main), subject=_$fun$__ginfo
==========================================================================================================================
Name(alias)          : EntryId  FrameId  Ref  Type       Value               
--------------------------------------------------------------------------------------------------------------------------
?n                   : 46       11       1    var        b : type=string     
==========================================================================================================================

Root var list: total=5
==========================================================================================================================
Var                  : Value
--------------------------------------------------------------------------------------------------------------------------
?load-class          : '("alpha.rulp.ximpl.collection.XRSet$Loader")
?load-jar            : '()
?load-script         : '("C:\\data\\rs\\load\\tool.rulp" "C:\\data\\rs\\load\\test/itest.rulp" "C:\\data\\rs\\load\\set.rulp")
?path                : '()
?trace               : false
==========================================================================================================================

Global frame tree:

->FRAME(root): id=0, lvl=0, subject=root
    ->FRAME(system): id=1, lvl=1, subject=system
        ->FRAME(main): id=2, lvl=2, subject=main
            ->FRAME(SF-set-0): id=3, lvl=3, subject=set
            ->FRAME(_$fun$_fun_add): id=5, lvl=3, subject=_$fun$_fun_add
                ->FRAME(SF-class1-2): id=7, lvl=5, subject=class1
                    ->FRAME(SF-o1-3): id=8, lvl=6, subject=o1
            ->FRAME(_$fun$__ginfo): id=11, lvl=3, subject=_$fun$__ginfo
                ->FRAME(do): id=10, lvl=4, subject=do

Global Subject list:

name=set, string=set, lvl=0, ref=2/3, parent=null, final=true, mbrs=15, frame=3(SF-set-0)
==========================================================================================================================
Name                           : Access  Final Static Inherit Prop Ref  Type       Value
--------------------------------------------------------------------------------------------------------------------------
?impl                          : PRIVATE                      0    1    var        nil
_set_add                       : PRIVATE                      0    0    factor     _set_add
_set_clear                     : PRIVATE                      0    0    factor     _set_clear
_set_has                       : PRIVATE                      0    0    factor     _set_has
_set_init                      : PRIVATE                      0    0    factor     _set_init
_set_is_empty                  : PRIVATE                      0    0    factor     _set_is_empty
_set_size_of                   : PRIVATE                      0    0    factor     _set_size_of
_set_to_list                   : PRIVATE                      0    0    factor     _set_to_list
add                            : DEFAULT Y                    1    1    func       (add nil) : frame=frame@main
clear                          : DEFAULT Y                    1    1    func       (clear) : frame=frame@main
has                            : DEFAULT Y                    1    1    func       (has nil) : frame=frame@main
init                           : DEFAULT Y                    1    1    func       (init) : frame=frame@main
is-empty                       : DEFAULT Y                    1    1    func       (is-empty) : frame=frame@main
size-of                        : DEFAULT Y                    1    1    func       (size-of) : frame=frame@main
to-list                        : DEFAULT Y                    1    1    func       (to-list) : frame=frame@main
==========================================================================================================================

