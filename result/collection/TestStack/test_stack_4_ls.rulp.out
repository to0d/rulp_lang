(ls stack)
;=>'(stack::?impl stack::clear stack::init stack::is-empty stack::peek stack::pop stack::push stack::size-of stack::to-list)

(new stack s1)
;=>s1

(ls s1)
;=>'(s1::?impl s1::init s1::this)

(s1::push 1)
;=>nil

(ls s1)
;=>'(s1::?impl s1::init s1::push s1::this)

(ls-print stack)
;=>nil
;out:
mbr=?impl, access deny
mbr=clear, name=(clear), type=func, property='(default final), attribute='(final)
mbr=init, name=(init), type=func, property='(default final), attribute='(final)
mbr=is-empty, name=(is-empty), type=func, property='(default final), attribute='(final)
mbr=peek, name=(peek), type=func, property='(default final), attribute='(final)
mbr=pop, name=(pop), type=func, property='(default final), attribute='(final)
mbr=push, name=(push nil), type=func, property='(default final), attribute='(final)
mbr=size-of, name=(size-of), type=func, property='(default final), attribute='(final)
mbr=to-list, name=(to-list), type=func, property='(default final), attribute='(final)

;eof

