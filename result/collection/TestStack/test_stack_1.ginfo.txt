Global Info:

Total runtime info:
==========================================================================================================================
                          Name:     info
--------------------------------------------------------------------------------------------------------------------------
           Interpreter call id:      252
    Interpreter call level/max:        4       10
               Frame max level:        5
                  Frame max id:       10
           Frame free id count:        2
==========================================================================================================================

Optimize info:
==========================================================================================================================
      Name: Status
--------------------------------------------------------------------------------------------------------------------------
       ERO: rebuild=0, compute=0
       CCO: rebuild=0, expr=0, call=0, cache=0, reuse=0
       TCO: rebuild=0, expr=0, call=0, node=0, compute=0, level=0, stack=0
       LCO: rebuild=0, arg=0, pass=0, hit=0
==========================================================================================================================

Expression compute count:
==========================================================================================================================
     RType:    Count
--------------------------------------------------------------------------------------------------------------------------
    factor:      330
      func:       42
     macro:        1
==========================================================================================================================

Callable stats info: callId=252, row=42, column=64(4), value-max=18, value-unit=2^x
==========================================================================================================================
   Frame    RType  Count  Ref Object                         3333333333333333333333333333333333333333333333333344333363656565 max=26, unit=2^x
--------------------------------------------------------------------------------------------------------------------------
    root   factor    179    0 add-attribute                   1333333333333333333333333333333333333333333332                 
    root   factor     63    0 defun                                                                        2333133333625     
    root   factor     25    0 return                                                                                   235241
    root   factor      7    0 defvar                                                                           31     1     2
    root   factor      6    0 alias                          33                                                              
    main   member      5    1 stack@s1::push                                                                            2 3  
    main   member      5    1 queue::_queue_push_back                                                                   2 3  
    root   factor      5    0 defmacro                                                                               31      
    root   factor      4    0 make-list                                                                        31            
    main   member      3    1 stack@s1::size-of                                                                        111   
    main   member      3    1 stack@s1::is-empty                                                                         2 1 
    root   factor      3    0 setq                                                                                     2    1
    main   member      3    1 queue::_queue_size_of                                                                    111   
    main   member      3    1 queue::_queue_is_empty                                                                     2 1 
    root   factor      3    0 load                                                                                   1 2     
    root   factor      3    0 deftemplate                                                                            3       
    main   member      2    1 stack@s1::to-list                                                                           11 
    main   member      2    1 stack@s1::pop                                                                             11   
    main   member      2    1 stack@s1::clear                                                                              2 
    main   member      2    1 queue::_queue_to_list                                                                       11 
    main   member      2    1 queue::_queue_pop_back                                                                    11   
    main   member      2    1 queue::_queue_clear                                                                          2 
    root   factor      2    0 new                                                                                      2     
    main funcList      2    4 is-empty                                                                                   1 1 
    root   factor      2    0 defclass                                                                                 2     
    main funcList      1    3 to-list                                                                                      1 
    root   factor      1    0 str-substr                                                                                    1
    root   factor      1    0 str-last-index-of                                                                             1
    main   member      1    1 stack@s1::init                                                                           1     
    main    macro      1    2 script_out                                                                                    1
    main   member      1    1 queue::_queue_init                                                                       1     
    root   factor      1    0 print-global-info                                                                             1
    root   factor      1    0 out-to-file                                                                                   1
    root   factor      1    0 name-of                                                                                  1     
    root   factor      1    0 load-class                                                                               1     
    root   factor      1    0 if                                                                                            1
    main     func      1    2 (file-prename string)                                                                         1
    root   factor      1    0 do                                                                                            1
    main funcList      1    2 clear                                                                                        1 
    main funcList      1    3 _ginfo                                                                                        1
    root   factor      1    0 +                                                                                             1
    root   factor      1    0 !=                                                                                            1
==========================================================================================================================

Object create count:
==========================================================================================================================
       RType:       Create       Delete        Exist
--------------------------------------------------------------------------------------------------------------------------
        atom:         1737            0         1737
      string:           49            0           49
        list:           16            2           14
        expr:          836           25          811
         var:           38           17           21
        func:          121            0          121
    template:            1            0            1
       macro:            5            0            5
    instance:            3            0            3
       class:            2            0            2
      member:          102            8           94
       frame:           47           42            5
 interpreter:            1            0
  frameEntry:          280            0
      lambda:           14            0
==========================================================================================================================

Global frame list: total=5

id=2, name=main, lvl=2, ref=4/4, entry=31, pid=1(system), subject=main
==========================================================================================================================
Name(alias)          : EntryId  FrameId  Ref  Type       Value               
--------------------------------------------------------------------------------------------------------------------------
root                 : 1        2        0    frame      frame@root          
system               : 2        2        0    frame      frame@system        
main                 : 3        2        4    frame      frame@main          
--                   : 4        2        2    macro      --                  
++                   : 5        2        2    macro      ++                  
inc                  : 6        2        2    macro      inc                 
dec                  : 7        2        2    macro      dec                 
max                  : 8        2        2    funcList   '((max list) (max nil nil)) : frame=null, type=list
                                         2    func       (max nil nil) : frame=frame@main
                                         1    func       (max list) : frame=frame@main
min                  : 9        2        2    funcList   '((min list) (min nil nil)) : frame=null, type=list
                                         2    func       (min nil nil) : frame=frame@main
                                         1    func       (min list) : frame=frame@main
is-empty             : 10       2        4    funcList   '((is-empty array) (is-empty list) (is-empty string) (is-empty type#queue) (is-empty type#stack)) : frame=null, type=list
                                         2    func       (is-empty list) : frame=frame@system
                                         2    func       (is-empty array) : frame=frame@system
                                         1    func       (is-empty string) : frame=frame@main
                                         1    func       (is-empty type#queue) : frame=frame@main
                                         1    func       (is-empty type#stack) : frame=frame@main
is-blank             : 11       2        2    func       (is-blank string) : frame=frame@main
file-prename         : 12       2        2    func       (file-prename string) : frame=frame@main
file-subffix         : 13       2        2    func       (file-subffix string) : frame=frame@main
sort                 : 14       2        4    funcList   '((sort array func) (sort array) (sort list func) (sort list)) : frame=null, type=list
                                         2    func       (sort list) : frame=frame@main
                                         1    func       (sort list func) : frame=frame@main
                                         1    func       (sort array) : frame=frame@main
                                         1    func       (sort array func) : frame=frame@main
print-list           : 15       2        3    funcList   '((print-list list) (print-list nil nil) (print-list nil)) : frame=null, type=list
                                         2    func       (print-list list) : frame=frame@main
                                         1    func       (print-list nil nil) : frame=frame@main
                                         1    func       (print-list nil) : frame=frame@main
to-valid-path        : 16       2        2    func       (to-valid-path string) : frame=frame@main
day-is-bigger-than   : 17       2        2    func       (day-is-bigger-than string string) : frame=frame@main
day-is-smaller-than  : 18       2        2    func       (day-is-smaller-than string string) : frame=frame@main
?script-path         : 19       2        2    var        result\collection\TestStack\test_stack_1.rulp : type=string
script_out           : 20       2        2    macro      script_out          
_ginfo               : 21       2        3    funcList   '((_ginfo string) (_ginfo)) : frame=null, type=list
                                         2    func       (_ginfo) : frame=frame@main
                                         1    func       (_ginfo string) : frame=frame@main
queue                : 22       2        2    class      queue               
type#queue           : 23       2        0    atom       type#queue          
size-of              : 24       2        3    funcList   '((size-of array int) (size-of array) (size-of list) (size-of type#queue) (size-of type#stack)) : frame=null, type=list
                                         2    func       (size-of list) : frame=frame@system
                                         2    func       (size-of array) : frame=frame@system
                                         2    func       (size-of array int) : frame=frame@system
                                         1    func       (size-of type#queue) : frame=frame@main
                                         1    func       (size-of type#stack) : frame=frame@main
get                  : 25       2        2    funcList   '((get array int int) (get array int) (get list int) (get type#queue int)) : frame=null, type=list
                                         2    func       (get list int) : frame=frame@system
                                         2    func       (get array int) : frame=frame@system
                                         2    func       (get array int int) : frame=frame@system
                                         1    func       (get type#queue int) : frame=frame@main
clear                : 26       2        2    funcList   '((clear type#queue) (clear type#stack)) : frame=null, type=list
                                         2    func       (clear type#queue) : frame=frame@main
                                         1    func       (clear type#stack) : frame=frame@main
to-list              : 27       2        3    funcList   '((to-list array) (to-list list) (to-list type#queue) (to-list type#stack)) : frame=null, type=list
                                         2    func       (to-list list) : frame=frame@system
                                         2    func       (to-list array) : frame=frame@system
                                         1    func       (to-list type#queue) : frame=frame@main
                                         1    func       (to-list type#stack) : frame=frame@main
stack                : 28       2        2    class      stack               
type#stack           : 29       2        0    atom       type#stack          
s1                   : 32       2        1    instance   stack@s1            
?rv                  : 38       2        1    var        true : type=bool    
==========================================================================================================================


id=3, name=SF-stack-0, lvl=3, ref=2/2, entry=0, pid=2(main), subject=stack

id=4, name=SF-s1-1, lvl=4, ref=8/9, entry=0, pid=3(SF-stack-0), subject=s1

id=6, name=SF-queue-2, lvl=3, ref=2/2, entry=0, pid=2(main), subject=queue

id=7, name=SF-un0-3, lvl=4, ref=8/9, entry=0, pid=6(SF-queue-2), subject=un0

id=9, name=_$fun$__ginfo, lvl=3, ref=1/2, entry=1, pid=2(main), subject=_$fun$__ginfo
==========================================================================================================================
Name(alias)          : EntryId  FrameId  Ref  Type       Value               
--------------------------------------------------------------------------------------------------------------------------
?rv                  : 51       9        1    var        result\collection\TestStack\test_stack_1 : type=string
==========================================================================================================================

Root var list: total=5
==========================================================================================================================
Var                  : Value
--------------------------------------------------------------------------------------------------------------------------
?load-class          : '("alpha.rulp.ximpl.collection.XRQueue$Loader")
?load-jar            : '()
?load-script         : '("C:\\data\\rs\\load\\tool.rulp" "C:\\data\\rs\\load\\test/itest.rulp" "C:\\data\\rs\\load\\queue.rulp" "C:\\data\\rs\\load\\stack.rulp")
?path                : '()
?trace               : false
==========================================================================================================================

Global frame tree:

->FRAME(root): id=0, lvl=0, subject=root
    ->FRAME(system): id=1, lvl=1, subject=system
        ->FRAME(main): id=2, lvl=2, subject=main
            ->FRAME(SF-stack-0): id=3, lvl=3, subject=stack
                ->FRAME(SF-s1-1): id=4, lvl=4, subject=s1
            ->FRAME(SF-queue-2): id=6, lvl=3, subject=queue
                ->FRAME(SF-un0-3): id=7, lvl=4, subject=un0
            ->FRAME(_$fun$__ginfo): id=9, lvl=3, subject=_$fun$__ginfo

Global Subject list:

name=queue, string=queue, lvl=0, ref=2/3, parent=null, final=true, mbrs=28, frame=6(SF-queue-2)
==========================================================================================================================
Name                           : Access  Final Static Inherit Prop Ref  Type       Value
--------------------------------------------------------------------------------------------------------------------------
?impl                          : PRIVATE                      0    1    var        nil
_queue_clear                   : PRIVATE                      0    0    factor     _queue_clear
_queue_get                     : PRIVATE                      0    0    factor     _queue_get
_queue_init                    : PRIVATE                      0    0    factor     _queue_init
_queue_is_empty                : PRIVATE                      0    0    factor     _queue_is_empty
_queue_peek_back               : PRIVATE                      0    0    factor     _queue_peek_back
_queue_peek_front              : PRIVATE                      0    0    factor     _queue_peek_front
_queue_pop_back                : PRIVATE                      0    0    factor     _queue_pop_back
_queue_pop_front               : PRIVATE                      0    0    factor     _queue_pop_front
_queue_push_back               : PRIVATE                      0    0    factor     _queue_push_back
_queue_push_front              : PRIVATE                      0    0    factor     _queue_push_front
_queue_size_of                 : PRIVATE                      0    0    factor     _queue_size_of
_queue_to_list                 : PRIVATE                      0    0    factor     _queue_to_list
clear                          : DEFAULT Y                    1    1    func       (clear) : frame=frame@main
get                            : DEFAULT Y                    1    1    func       (get nil) : frame=frame@main
init                           : DEFAULT Y                    1    1    func       (init) : frame=frame@main
is-empty                       : DEFAULT Y                    1    1    func       (is-empty) : frame=frame@main
peek                           : DEFAULT Y                    1    1    func       (peek) : frame=frame@main
peek_back                      : DEFAULT Y                    1    1    func       (peek_back) : frame=frame@main
peek_front                     : DEFAULT Y                    1    1    func       (peek_front) : frame=frame@main
pop                            : DEFAULT Y                    1    1    func       (pop) : frame=frame@main
pop_back                       : DEFAULT Y                    1    1    func       (pop_back) : frame=frame@main
pop_front                      : DEFAULT Y                    1    1    func       (pop_front) : frame=frame@main
push                           : DEFAULT Y                    1    1    func       (push nil) : frame=frame@main
push_back                      : DEFAULT Y                    1    1    func       (push_back nil) : frame=frame@main
push_front                     : DEFAULT Y                    1    1    func       (push_front nil) : frame=frame@main
size-of                        : DEFAULT Y                    1    1    func       (size-of) : frame=frame@main
to-list                        : DEFAULT Y                    1    1    func       (to-list) : frame=frame@main
==========================================================================================================================

name=stack, string=stack, lvl=0, ref=2/3, parent=null, final=true, mbrs=9, frame=3(SF-stack-0)
==========================================================================================================================
Name                           : Access  Final Static Inherit Prop Ref  Type       Value
--------------------------------------------------------------------------------------------------------------------------
?impl                          : PRIVATE                      0    1    var        nil
clear                          : DEFAULT Y                    1    1    func       (clear) : frame=frame@main
init                           : DEFAULT Y                    1    1    func       (init) : frame=frame@main
is-empty                       : DEFAULT Y                    1    1    func       (is-empty) : frame=frame@main
peek                           : DEFAULT Y                    1    1    func       (peek) : frame=frame@main
pop                            : DEFAULT Y                    1    1    func       (pop) : frame=frame@main
push                           : DEFAULT Y                    1    1    func       (push nil) : frame=frame@main
size-of                        : DEFAULT Y                    1    1    func       (size-of) : frame=frame@main
to-list                        : DEFAULT Y                    1    1    func       (to-list) : frame=frame@main
==========================================================================================================================

name=s1, string=stack@s1, lvl=1, ref=1/3, parent=stack, final=false, mbrs=10, frame=4(SF-s1-1)
==========================================================================================================================
Name                           : Access  Final Static Inherit Prop Ref  Type       Value
--------------------------------------------------------------------------------------------------------------------------
?impl                          : PRIVATE              Y       4    1    var        queue@un0 : type=instance
?rv                            : DEFAULT                      0    1    var        true : type=bool
clear                          : DEFAULT Y            Y       5    1    func       (clear) : frame=frame@SF-s1-1, type=lambda
init                           : DEFAULT Y            Y       5    1    func       (init) : frame=frame@SF-s1-1, type=lambda
is-empty                       : DEFAULT Y            Y       5    1    func       (is-empty) : frame=frame@SF-s1-1, type=lambda
pop                            : DEFAULT Y            Y       5    1    func       (pop) : frame=frame@SF-s1-1, type=lambda
push                           : DEFAULT Y            Y       5    1    func       (push nil) : frame=frame@SF-s1-1, type=lambda
size-of                        : DEFAULT Y            Y       5    1    func       (size-of) : frame=frame@SF-s1-1, type=lambda
this                           : DEFAULT                      0    1    instance   stack@s1
to-list                        : DEFAULT Y            Y       5    1    func       (to-list) : frame=frame@SF-s1-1, type=lambda
==========================================================================================================================

