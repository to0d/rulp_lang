;; fun2(n) = 0                          when n <=0
;;         = n + fun2(n-1)              when n < 10
;;         = fun2(n-1) + fun2(n/2-1)    when n < 100
;;         = fun2(n-1) + fun2(n/4-1)    when n < 1000
;;         = fun2(n-1) + fun2(n/8-1)    other
(defun fun2 (?v) 
    (do 
        (if (<= ?v 0)(return 0))
        (if (<= ?v 10)(return (+ ?v (fun2 (- ?v 1)))))
        (if (<= ?v 100)(return (+ (fun2 (- ?v 1)) (fun2 (- (/ ?v 2) 1)))))
        (if (<= ?v 1000)(return (+ (fun2 (- ?v 1)) (fun2 (- (/ ?v 4) 1)))))
        (return (+ (fun2 (- ?v 1)) (fun2 (- (/ ?v 8) 1))))
    )
)
;=>

(cc (fun2 0))
;=>

(cc (fun2 1))
;=>

(cc (fun2 2))
;=>

(cc (fun2 3))
;=>

(cc (fun2 11))
;=>

(cc (fun2 101))
;=>

(attribute-of fun1)
;=>

(attribute-of fun2)
;=>

(print-impl fun2)
;;;

(opt-status)
;=>

(_ginfo)
;;;