;; fun2(n) = 0                          when n <=0
;;         = n + fun2(n-1)              when n < 10
;;         = fun2(n-1) + fun2(n/2-1)    when n < 100
;;         = fun2(n-1) + fun2(n/4-1)    when n < 1000
;;         = fun2(n-1) + fun2(n/8-1)    other
(defun fun2 (?v) 
    (do 
        (if (<= ?v 0)(return 0))
        (if (<= ?v 10)(return (+ ?v (fun2 (- ?v 1)))))
        (if (<= ?v 100)(return (+ (fun2 (- ?v 1)) (fun2 (- (/ ?v 2) 1)))))
        (if (<= ?v 1000)(return (+ (fun2 (- ?v 1)) (fun2 (- (/ ?v 4) 1)))))
        (return (+ (fun2 (- ?v 1)) (fun2 (- (/ ?v 8) 1))))
    )
)
;=>fun2

(cc (fun2 0))
;=>0

(cc (fun2 1))
;=>1

(cc (fun2 2))
;=>3

(cc (fun2 3))
;=>6

(cc (fun2 11))
;=>65

(cc (fun2 101))
;=>132564

(attribute-of fun1)
;=>'()

(attribute-of fun2)
;=>'(opt-cco)

(print-impl fun2)
;=>nil
;out:
(defun fun2 (?v)
    (if (<= ?v 0)
        (return 0)
    )
    (if[stable] (<= ?v 10)
        (return[stable] (+[atom return-type=1 stable] ?v (cc2[opt-id=0] (fun2 (- ?v 1)))))
    )
    (if[stable] (<= ?v 100)
        (return[stable] (+[atom return-type=1 stable] (cc2[opt-id=0] (fun2 (- ?v 1))) (cc2[opt-id=0] (fun2 (- (/ ?v 2) 1)))))
    )
    (if[stable] (<= ?v 1000)
        (return[stable] (+[atom return-type=1 stable] (cc2[opt-id=0] (fun2 (- ?v 1))) (cc2[opt-id=0] (fun2 (- (/ ?v 4) 1)))))
    )
    (return[stable] (+[atom return-type=1 stable] (cc2[opt-id=0] (fun2 (- ?v 1))) (cc2[opt-id=0] (fun2 (- (/ ?v 8) 1)))))
)[opt-cco]
rebuild: id=0, name=cc2, call=197, hit=96, func=fun2, cache=101, data:[$$i_0/0/D/1] [$$i_1/1/D/1] [$$i_10/55/D/3]...

;eof

(opt-status)
;=>nil
;out:
==========================================================================================================================
      Name: Status
--------------------------------------------------------------------------------------------------------------------------
       ERO: rebuild=0, compute=0
       CCO: rebuild=1, expr=1, call=197, cache=96, reuse=6
       TCO: rebuild=0, expr=0, call=0, node=0, compute=0, level=0, stack=0
       LCO: rebuild=0, arg=0, pass=0, hit=0
==========================================================================================================================

;eof

(_ginfo)
;=>nil

