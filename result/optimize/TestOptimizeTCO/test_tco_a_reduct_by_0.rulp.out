(defun fun1 (?v)
    (do
        (if (<= ?v 0)(return 1))
        (return (* (- ?v 2) (/ 1.0 (- ?v 2)) (fun1 (- ?v 1))))
    )
)[opt-tco]
;=>fun1

(list-function-in-return fun1)
;=>'("fun1")

(attribute-of fun1)
;=>'(opt-tco)

(print-impl fun1)
;=>nil
;out:
(defun fun1 (?v)
    (do
        (if (<= ?v 0)
            (return 1)
        )
        (cps[opt-id=0] (* (- ?v 2) (/ 1.0 (- ?v 2)) (fun1 (- ?v 1))))
    )
)[opt-tco]
rebuild: id=0, name=cps, call=0, expand=0

;eof

(/ 1.0 0)
;err:
divide zero(DIV 1.0 0)
at (/ 1.0 0) ; main-2
;eof

(fun1 3)
;=>0

(fun1 4)
;=>0

(opt-status)
;=>nil
;out:
==========================================================================================================================
      Name: Status
--------------------------------------------------------------------------------------------------------------------------
       ERO: rebuild=0, compute=0
       CCO: rebuild=0, expr=0, call=0, cache=0, reuse=0
       TCO: rebuild=1, expr=1, call=5, node=22, compute=50, level=3, stack=4
       LCO: rebuild=0, arg=0, pass=0, hit=0
==========================================================================================================================

;eof

(_ginfo)
;=>nil

