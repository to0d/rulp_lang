;; fact(n) = n*fact(n-1)
(defun fact (?v)
    (do
        (if (<= ?v 0)(return 1))
        (return (* ?v (fact (- ?v 1))))
    )
)[opt-tco]
;=>fact

(list-function-in-return fact)
;=>'("fact")

(attribute-of fact)
;=>'(opt-tco)

(print-impl fact)
;=>nil
;out:
(defun fact (?v)
    (do (if (<= ?v 0) (return 1)) (return-tco (* ?v (fact (- ?v 1)))))
)

;eof

(fact 1)
;=>1

(fact 2)
;=>2

(fact 3)
;=>6

(fact 4)
;=>24

(opt-status)
;=>nil
;out:
==========================================================================================================================
      Name:     expr  compute
--------------------------------------------------------------------------------------------------------------------------
       TCO:        1       60
==========================================================================================================================

;eof

(_ginfo)
;=>nil

