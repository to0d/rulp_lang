;; fact(n) = n*fact(n-1)
(defun fact (?v)
    (do
        (if (<= ?v 0)(return 1))
        (return (* ?v (fact (- ?v 1))))
    )
)[opt-tco]
;=>fact

(list-function-in-return fact)
;=>'("fact")

(attribute-of fact)
;=>'(opt-tco)

(print-impl fact)
;=>nil
;out:
(defun fact (?v)
    (do (if (<= ?v 0) (return 1)) (return-tco (* ?v (fact (- ?v 1)))))
)[opt-tco]

;eof

(fact 1)
;=>1

(fact 2)
;=>2

(fact 3)
;=>6

(fact 4)
;=>24

(opt-status)
;=>nil
;out:
==========================================================================================================================
      Name: Status
--------------------------------------------------------------------------------------------------------------------------
       ERO: rebuild=0, compute=0
       CCO: rebuild=0, expr=0, call=0, cache=0, reuse=0
       TCO: rebuild=5, expr=1, call=10, compute=60
==========================================================================================================================

;eof

(_ginfo)
;=>nil

