(defun fun (?x) 
    (if (< ?x 0) 
        (return 0))
    (if (> (fun (- ?x 1)) 1)
        (return 1))
    (return 2)
)[opt-tco]
;=>fun

(list-function-in-return fun)
;=>'()

(attribute-of fun)
;=>'()

(print-impl fun)
;=>nil
;out:
(defun fun (?x)
    (do
        (if
            (< ?x 0)
            (return 0)
        )
        (if
            (> (fun (- ?x 1)) 1)
            (return 1)
        )
        (return 2)
    )
)

;eof

(fun 10)
;=>2

(opt-status)
;=>nil
;out:
==========================================================================================================================
      Name: Status
--------------------------------------------------------------------------------------------------------------------------
       TCO: expr=0, call=0, compute=0
==========================================================================================================================

;eof

(_ginfo)
;=>nil

