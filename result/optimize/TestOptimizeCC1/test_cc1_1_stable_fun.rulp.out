(defun fun1 (?v)
    (return (+ ?v 1))
)
;=>fun1

(defun fun2 ()
    (defvar ?x 0)
    (loop for x from 1 to 3 do
        (setq ?x (+ ?x (fun1 1)))
    )
    (return ?x)
)[opt-cc2]
;=>fun2

(fun2)
;=>6

(attribute-of fun1)
;=>'()

(attribute-of fun2)
;=>'(opt-cc2)

(print-impl fun2)
;=>nil
;out:
(defun fun2 ()
    (do
        (defvar ?x 0)
        (loop for x from 1 to 3 do
            (setq ?x (+[opt-cc0] ?x (cc2[id=0] (fun1 1))))
        )
        (return ?x)
    )
)[opt-cc2]
cc 0: id=0, type=CC2, call=3, hit=2, func=fun1, cache=1, $$i_1=2

;eof

(opt-status)
;=>nil
;out:
==========================================================================================================================
      Name: Status
--------------------------------------------------------------------------------------------------------------------------
       TCO: rebuild=0, expr=0, call=0, compute=0
       CC0: rebuild=1, compute=0
       CC2: rebuild=1, expr=1, call=3, cache=2, reuse=0
==========================================================================================================================

;eof

(_ginfo)
;=>nil

