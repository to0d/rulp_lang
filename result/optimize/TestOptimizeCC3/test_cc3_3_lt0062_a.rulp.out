; f(m,n) = f(m-1,n) + f(m,n-1)
; f(m,n) = f(n,m)
; f(1,n) = 1

(defun uniquePaths (m n)
    (if (or (= m 0) (= n 0)) (return 0))
    (if (< m n) (return (uniquePaths n m)))
    (if (= n 1) (return 1))
    (return (+ (uniquePaths (- m 1) n) (uniquePaths m (- n 1))))
)[opt-cc3]
;=>uniquePaths

(attribute-of uniquePaths)
;=>'(opt-cc2 opt-cc3)

(print-impl uniquePaths)
;=>nil
;out:
(defun uniquePaths (mn)
    (do
        (cc3 (if (or (= m 0) (= n 0)) (return 0)))
        (if
            (cc3 (< m n))
            (return (cc2 (cc3 (uniquePaths n m))))
        )
        (cc3 (if (= n 1) (return 1)))
        (cc3 (return (+ (uniquePaths (- m 1) n) (uniquePaths m (- n 1)))))
    )
)

;eof

(uniquePaths 3 7)
;=>28

(opt-status)
;=>nil
;out:
==========================================================================================================================
      Name: Status
--------------------------------------------------------------------------------------------------------------------------
       TCO: expr=0, call=0, compute=0
       CC0: compute=0
       CC1: expr=0, call=0, cache=0, reuse=0
       CC2: expr=1, call=16, cache=13
       CC3: expr=5, call=439, cache=278
==========================================================================================================================

;eof

(_ginfo)
;=>nil

