Global Info:

Total runtime info:
==========================================================================================================================
                          Name:     info
--------------------------------------------------------------------------------------------------------------------------
           Interpreter call id:      237
    Interpreter call level/max:        4       52
               Frame max level:       33
                  Frame max id:       34
           Frame free id count:       30
==========================================================================================================================

Optimize info:
==========================================================================================================================
      Name: Status
--------------------------------------------------------------------------------------------------------------------------
       ERO: rebuild=0, compute=0
       CCO: rebuild=1, expr=1, call=10, cache=0, reuse=0
       TCO: rebuild=0, expr=0, call=0, node=0, compute=0, level=0, stack=0
       LCO: rebuild=0, arg=0, pass=0, hit=0
==========================================================================================================================

Expression compute count:
==========================================================================================================================
     RType:    Count
--------------------------------------------------------------------------------------------------------------------------
    factor:      675
      func:       12
     macro:        1
==========================================================================================================================

Callable stats info: callId=237, row=33, column=60(4), value-max=87, value-unit=2^x
==========================================================================================================================
   Frame    RType  Count  Ref Object                         3333333333333333333333333333333333333333333333333344333363X5 max=405, unit=2^x
--------------------------------------------------------------------------------------------------------------------------
    root   factor    179    0 add-attribute                   1333333333333333333333333333333333333333333332             
    root   factor     88    0 setq                                                                                     81
    root   factor     60    0 if                                                                                       71
    root   factor     55    0 defun                                                                        2333133333621 
    root   factor     49    0 <=                                                                                       7 
    root   factor     30    0 +                                                                                        61
    root   factor     29    0 power                                                                                    6 
    root   factor     29    0 /                                                                                        6 
    root   factor     29    0 %                                                                                        6 
    root   factor     27    0 defvar                                                                           31     162
    root   factor     12    0 return                                                                                   51
    root   factor     11    0 do                                                                                       51
    root   factor     10    0 try                                                                                      5 
    root   factor     10    0 loop                                                                                     5 
    main     func     10    1 (isHappy int)                                                                            5 
    root   factor     10    0 break                                                                                    5 
    root   factor     10    0 =                                                                                        5 
    root   factor      6    0 alias                          33                                                          
    root   factor      5    0 defmacro                                                                               31  
    root   factor      4    0 make-list                                                                        31        
    root   factor      3    0 deftemplate                                                                            3   
    root   factor      1    0 str-substr                                                                                1
    root   factor      1    0 str-last-index-of                                                                         1
    main    macro      1    2 script_out                                                                                1
    root   factor      1    0 print-impl                                                                               1 
    root   factor      1    0 print-global-info                                                                         1
    root   factor      1    0 out-to-file                                                                               1
    root   factor      1    0 opt-status                                                                                1
    root   factor      1    0 load                                                                                   1   
    main     func      1    2 (file-prename string)                                                                     1
    root   factor      1    0 attribute-of                                                                             1 
    main funcList      1    3 _ginfo                                                                                    1
    root   factor      1    0 !=                                                                                        1
==========================================================================================================================

Object create count:
==========================================================================================================================
       RType:       Create       Delete        Exist
--------------------------------------------------------------------------------------------------------------------------
        atom:         1550            0         1550
         int:           18            0           18
      string:           42            0           42
        list:           13            1           12
        expr:          737           11          726
         var:           57           42           15
        func:           72            0           72
    template:            1            0            1
       macro:            5            0            5
      member:            1            0            1
       frame:           82           81            1
 interpreter:            1            0
  frameEntry:          315            0
      lambda:            0            0
==========================================================================================================================

Global frame list: total=1

id=2, name=main, lvl=2, ref=2/2, entry=23, pid=1(system), subject=main
==========================================================================================================================
Name(alias)          : EntryId  FrameId  Ref  Type       Value               
--------------------------------------------------------------------------------------------------------------------------
root                 : 1        2        0    frame      frame@root          
system               : 2        2        0    frame      frame@system        
main                 : 3        2        2    frame      frame@main          
--                   : 4        2        2    macro      --                  
++                   : 5        2        2    macro      ++                  
inc                  : 6        2        2    macro      inc                 
dec                  : 7        2        2    macro      dec                 
max                  : 8        2        2    funcList   '((max list) (max nil nil)) : frame=null, type=list
                                         2    func       (max nil nil) : frame=frame@main
                                         1    func       (max list) : frame=frame@main
min                  : 9        2        2    funcList   '((min list) (min nil nil)) : frame=null, type=list
                                         2    func       (min nil nil) : frame=frame@main
                                         1    func       (min list) : frame=frame@main
is-empty             : 10       2        2    funcList   '((is-empty array) (is-empty list) (is-empty string)) : frame=null, type=list
                                         2    func       (is-empty list) : frame=frame@system
                                         2    func       (is-empty array) : frame=frame@system
                                         1    func       (is-empty string) : frame=frame@main
is-blank             : 11       2        2    func       (is-blank string) : frame=frame@main
file-prename         : 12       2        2    func       (file-prename string) : frame=frame@main
file-subffix         : 13       2        2    func       (file-subffix string) : frame=frame@main
print-list           : 14       2        3    funcList   '((print-list list) (print-list nil nil) (print-list nil)) : frame=null, type=list
                                         2    func       (print-list list) : frame=frame@main
                                         1    func       (print-list nil nil) : frame=frame@main
                                         1    func       (print-list nil) : frame=frame@main
sort                 : 15       2        4    funcList   '((sort array func) (sort array) (sort list func) (sort list)) : frame=null, type=list
                                         2    func       (sort list) : frame=frame@main
                                         1    func       (sort list func) : frame=frame@main
                                         1    func       (sort array) : frame=frame@main
                                         1    func       (sort array func) : frame=frame@main
to-valid-path        : 16       2        2    func       (to-valid-path string) : frame=frame@main
day-is-bigger-than   : 17       2        2    func       (day-is-bigger-than string string) : frame=frame@main
day-is-smaller-than  : 18       2        2    func       (day-is-smaller-than string string) : frame=frame@main
?script-path         : 19       2        2    var        result\optimize\TestOptimizeCCO\test_cco_7_lt0202_try.rulp : type=string
script_out           : 20       2        2    macro      script_out          
_ginfo               : 21       2        3    funcList   '((_ginfo string) (_ginfo)) : frame=null, type=list
                                         2    func       (_ginfo) : frame=frame@main
                                         1    func       (_ginfo string) : frame=frame@main
isHappy              : 22       2        1    func       (isHappy int) : frame=frame@main
?rv                  : 83       2        1    var        false : type=bool   
==========================================================================================================================


id=32, name=_$fun$__ginfo, lvl=3, ref=1/2, entry=1, pid=2(main), subject=_$fun$__ginfo
==========================================================================================================================
Name(alias)          : EntryId  FrameId  Ref  Type       Value               
--------------------------------------------------------------------------------------------------------------------------
?rv                  : 87       32       1    var        result\optimize\TestOptimizeCCO\test_cco_7_lt0202_try : type=string
==========================================================================================================================

Root var list: total=5
==========================================================================================================================
Var                  : Value
--------------------------------------------------------------------------------------------------------------------------
?load-class          : '()
?load-jar            : '()
?load-script         : '("C:\\data\\rs\\load\\tool.rulp" "C:\\data\\rs\\load\\test/itest.rulp")
?path                : '()
?trace               : false
==========================================================================================================================

Global frame tree:

->FRAME(root): id=0, lvl=0, subject=root
    ->FRAME(system): id=1, lvl=1, subject=system
        ->FRAME(main): id=2, lvl=2, subject=main
            ->FRAME(_$fun$__ginfo): id=32, lvl=3, subject=_$fun$__ginfo

Global Subject list:

