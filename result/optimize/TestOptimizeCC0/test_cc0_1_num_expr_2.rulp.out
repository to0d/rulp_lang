(defun fun ()
    (return (+ 1 (- 3 (* 1 (/ 4 2)))))
)[opt-cc0]
;=>fun

(attribute-of fun)
;=>'(opt-cc0)

(print-impl fun)
;=>nil
;out:
(defun fun ()
    (return 2)
)

;eof

(fun)
;=>2

(opt-status)
;=>nil
;out:
==========================================================================================================================
      Name: Status
--------------------------------------------------------------------------------------------------------------------------
       TCO: expr=0, call=0, compute=0
       CC0: compute=1
       CC1: expr=0, call=0, cache=0, reuse=0
       CC2: expr=0, call=0, cache=0
       CC3: expr=0, call=0, cache=0
==========================================================================================================================

;eof

(fun)
;=>2

(opt-status)
;=>nil
;out:
==========================================================================================================================
      Name: Status
--------------------------------------------------------------------------------------------------------------------------
       TCO: expr=0, call=0, compute=0
       CC0: compute=1
       CC1: expr=0, call=0, cache=0, reuse=0
       CC2: expr=0, call=0, cache=0
       CC3: expr=0, call=0, cache=0
==========================================================================================================================

;eof

(_ginfo)
;=>nil

