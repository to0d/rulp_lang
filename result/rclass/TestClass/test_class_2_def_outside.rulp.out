(defclass class1
    (defvar ?value 0)
    (defun add (?x) (setq ?value (+ ?value ?x)))
    (defun sub (?x) (setq ?value (- ?value ?x)))
    (defun get ()   (return ?value))
    (defun set (?x) (setq ?value ?x))
)
;=>class1

(new class1 o1)
;=>o1

(ls class1)
;=>'(class1::?value class1::add class1::get class1::set class1::sub)

(ls o1)
;=>'(o1::this)

(defvar var1 0)
;=>&var1

(defvar o1::var1 1)
;=>&var1

(ls class1)
;=>'(class1::?value class1::add class1::get class1::set class1::sub)

(ls o1)
;=>'(o1::this o1::var1)

(value-of var1)
;=>0

(value-of (value-of o1::var1))
;=>1

