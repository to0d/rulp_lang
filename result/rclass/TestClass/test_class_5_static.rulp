(load tool)
;=>

(defclass class1
    (defvar ?v1 0)
    (defvar ?v2 0)[static]
    (defun fun1 () (return 1))[static]
)
;=>

(new class1 o1)
;;;

(value-of o1::?v1)
;;;

(type-of $(value-of o1::?v1))
;;;

(value-of (value-of o1::?v1))
;;;

(value-of (value-of o1::?v2))
;;;

(setq class1::?v1 1)
;;;

(setq class1::?v2 2)
;;;

(value-of (value-of o1::?v1))
;;;

(value-of (value-of o1::?v2))
;;;

(class1::fun1)
;;;

(print-list class1)
;;;

(print-list o1)
;;;