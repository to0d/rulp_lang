Global Info:

Total runtime info:
==========================================================================================================================
                          Name:     info
--------------------------------------------------------------------------------------------------------------------------
           Interpreter call id:      239
    Interpreter call level/max:        4       10
               Frame max level:        8
                  Frame max id:       15
           Frame free id count:        8
==========================================================================================================================

Optimize info:
==========================================================================================================================
      Name: Status
--------------------------------------------------------------------------------------------------------------------------
       ERO: rebuild=0, compute=0
       CCO: rebuild=0, expr=0, call=0, cache=0, reuse=0
       TCO: rebuild=0, expr=0, call=0, node=0, compute=0, level=0, stack=0
       LCO: rebuild=0, arg=0, pass=0, hit=2
==========================================================================================================================

Expression compute count:
==========================================================================================================================
     RType:    Count
--------------------------------------------------------------------------------------------------------------------------
    factor:      272
      func:       16
     macro:        1
==========================================================================================================================

Callable stats info: callId=239, row=31, column=60(4), value-max=5, value-unit=2^x
==========================================================================================================================
   Frame    RType  Count  Ref Object                         333333333333333333333333333333333333333333333333333333334457 max=33, unit=2^x
--------------------------------------------------------------------------------------------------------------------------
    root   factor    179    0 add-attribute                   1333333333333333333333333333333333333333333332             
    root   factor     39    0 defun                                                                        133321333342  
    root   factor      7    0 return                                                                                   33
    root   factor      6    0 defvar                                                                       1         1112
    root   factor      6    0 alias                          33                                                          
    root   factor      3    0 setq                                                                                    111
    root   factor      3    0 print-subject                                                                            12
    root   factor      3    0 do                                                                                        3
    root   factor      3    0 deftemplate                                                                       3        
    root   factor      3    0 defmacro                                                                         2     1   
  system funcList      2    1 to-list                                                                                   2
  system funcList      2    1 println                                                                                   2
    root   factor      2    0 print                                                                                     2
    root   factor      2    0 new                                                                                     11 
    root   factor      2    0 make-array                                                                               11
    root   factor      2    0 loop                                                                                      2
    root   factor      2    0 add-array-to-list                                                                         2
    root   factor      1    0 str-substr                                                                                1
    root   factor      1    0 str-last-index-of                                                                         1
    main    macro      1    1 script_out                                                                                1
    root   factor      1    0 print-global-info                                                                         1
    root   factor      1    0 out-to-file                                                                               1
    root   factor      1    0 load                                                                                   1   
    root   factor      1    0 if                                                                                        1
    main     func      1    1 (file-prename string)                                                                     1
    root   factor      1    0 defclass                                                                                1  
    root   factor      1    0 add-list-to-array                                                                        1 
  system funcList      1    1 add                                                                                      1 
    main funcList      1    2 _ginfo                                                                                    1
    root   factor      1    0 +                                                                                         1
    root   factor      1    0 !=                                                                                        1
==========================================================================================================================

Object create count:
==========================================================================================================================
       RType:       Create       Delete        Exist
--------------------------------------------------------------------------------------------------------------------------
        atom:         1112            0         1112
      string:           26            0           26
        list:           10            1            9
        expr:          470           15          455
       array:            2            0            2
         var:           36           15           21
        func:           64            0           64
    template:            1            0            1
       macro:            3            0            3
    instance:            2            0            2
       class:            1            0            1
      member:           23            2           21
       frame:           26           22            4
 interpreter:            1            0
  frameEntry:          252            0
      lambda:            7            0
==========================================================================================================================

Global frame list: total=4

id=2, name=main, lvl=2, ref=4/4, entry=15, pid=1(system), subject=main
==========================================================================================================================
Name(alias)          : EntryId  FrameId  Ref  Type       Value               
--------------------------------------------------------------------------------------------------------------------------
root                 : 1        2        0    frame      frame@root          
system               : 2        2        0    frame      frame@system        
main                 : 3        2        4    frame      frame@main          
is-empty             : 4        2        1    funcList   '((is-empty array) (is-empty list) (is-empty string)) : frame=null, type=list
                                         2    func       (is-empty list) : frame=frame@system
                                         2    func       (is-empty array) : frame=frame@system
                                         1    func       (is-empty string) : frame=frame@main
is-blank             : 5        2        1    func       (is-blank string) : frame=frame@main
file-prename         : 6        2        1    func       (file-prename string) : frame=frame@main
file-subffix         : 7        2        1    func       (file-subffix string) : frame=frame@main
?script-path         : 8        2        1    var        result\rclass\TestClass\test_class_f_recursion.rulp : type=string
script_out           : 9        2        1    macro      script_out          
_ginfo               : 10       2        2    funcList   '((_ginfo string) (_ginfo)) : frame=null, type=list
                                         1    func       (_ginfo) : frame=frame@main
                                         1    func       (_ginfo string) : frame=frame@main
class1               : 11       2        1    class      class1              
type#class1          : 12       2        0    atom       type#class1         
o1                   : 13       2        1    var        class1@un0 : type=instance
o2                   : 16       2        1    var        class1@un1 : type=instance
?rv                  : 22       2        1    var        {} : type=array     
==========================================================================================================================


id=3, name=SF-class1-0, lvl=3, ref=3/3, entry=0, pid=2(main), subject=class1

id=4, name=SF-un0-1, lvl=4, ref=5/6, entry=0, pid=3(SF-class1-0), subject=un0

id=5, name=SF-un1-2, lvl=4, ref=3/4, entry=0, pid=3(SF-class1-0), subject=un1

id=13, name=_$fun$__ginfo, lvl=3, ref=1/2, entry=1, pid=2(main), subject=_$fun$__ginfo
==========================================================================================================================
Name(alias)          : EntryId  FrameId  Ref  Type       Value               
--------------------------------------------------------------------------------------------------------------------------
?rv                  : 37       13       1    var        result\rclass\TestClass\test_class_f_recursion : type=string
==========================================================================================================================

Global frame tree:

->FRAME(root): id=0, lvl=0, subject=root
    ->FRAME(system): id=1, lvl=1, subject=system
        ->FRAME(main): id=2, lvl=2, subject=main
            ->FRAME(SF-class1-0): id=3, lvl=3, subject=class1
                ->FRAME(SF-un0-1): id=4, lvl=4, subject=un0
                ->FRAME(SF-un1-2): id=5, lvl=4, subject=un1
            ->FRAME(_$fun$__ginfo): id=13, lvl=3, subject=_$fun$__ginfo

Global Subject list:

name=class1, string=class1, lvl=0, ref=1/3, parent=null, final=false, mbrs=6, frame=3(SF-class1-0)
==========================================================================================================================
Name                 : Access  Final Static Inherit Prop Ref  Type       Value
--------------------------------------------------------------------------------------------------------------------------
?children            : DEFAULT                      0    1    var        (lambda) : type=expr
?value               : DEFAULT                      0    1    var        nil
add                  : DEFAULT                      0    1    func       (add type#class1) : frame=frame@main
dump                 : DEFAULT                      0    1    func       (dump) : frame=frame@main
get                  : DEFAULT                      0    1    func       (get) : frame=frame@main
init                 : DEFAULT                      0    1    func       (init nil) : frame=frame@main
==========================================================================================================================

