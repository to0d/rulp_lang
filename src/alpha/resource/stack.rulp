(load queue)
;=>

(defclass stack
    
    (defvar ?impl nil)[private]
    
    (defun init ()
        (setq ?impl (new queue)))[final]
    
    (defun push (?e)
        (?impl::push_back ?e))[final]

    (defun pop ()
        (return (?impl::pop_back)))[final]
    
    (defun peek ()
        (return (?impl::peek_back)))[final]

    (defun size-of ()
        (return (?impl::size-of)))[final]
        
    (defun is-empty ()
        (return (?impl::is-empty)))[final]
        
    (defun clear ()
        (?impl::clear))[final]
        
    (defun to-list ()
        (return (?impl::to-list)))[final]

)[final]

(defun size-of  ((?stack stack)) (return (?stack::size-of)))
(defun is-empty ((?stack stack)) (return (?stack::is-empty)))
(defun clear    ((?stack stack)) (return (?stack::clear)))
(defun to-list  ((?stack stack)) (return (?stack::to-list)))