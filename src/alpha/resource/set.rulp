(defclass set

    (defvar ?impl nil)[private]
    
    (defun init ()
        (setq ?impl (set::_set_init)))[final]
    
    (defun add (?v)
        (set::_set_add ?impl ?v))[final]
    
    (defun has (?v)
        (return (set::_set_has ?impl ?v)))[final]
    
    (defun size-of ()
        (return (set::_set_size_of ?impl)))[final]
        
    (defun is-empty ()
        (return (set::_set_is_empty ?impl)))[final]
        
    (defun clear ()
        (set::_set_clear ?impl))[final]
        
    (defun to-list ()
        (return (set::_set_to_list ?impl)))[final]

)[final]

(defun size-of  ((?set set)) (return (?set::size-of)))
(defun is-empty ((?set set)) (return (?set::is-empty)))
(defun clear    ((?set set)) (return (?set::clear)))
(defun to-list  ((?set set)) (return (?set::to-list)))

(load-class "alpha.rulp.ximpl.collection.XRSet$Loader")